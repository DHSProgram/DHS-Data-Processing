PROC GLOBAL
  { DHS-8 FINIMP application  version - 1.0.1 of 08/26/2020 }

  { array to bring women variables from level 2 into level 1 as follows: }
  array womvars(50,15);
        { (i,1)  = line number
          (i,2)  = CMC birth
          (i,3)  = flag for date of birth
          (i,4)  = Respondent smokes
          (i,5)  = Pregnancy status
          (i,6)  = Months of pregnancy
          (i,7)  = educational level
          (i,8)  = years of education
          (i,12) = CS educational level for preliminar & final report
          (i,13) = result of individual interview }
  { array to bring men variables from level 2 into level 1 as follows: }
  array manvars(50,15);
        { (i,1)  = line number
          (i,2)  = CMC birth
          (i,3)  = flag for date of birth
          (i,4)  = Respondent smokes
          (i,7)  = educational level
          (i,8)  = years of education
          (i,12) = CS educational level for preliminar & final report
          (i,13) = result of individual interview }
  { array to bring children variables from level 2 into level 1 as follows: }
  { dimensions 5,6 not used on purpose to make it compatible with women dimensions }
  array chlvars(50,15);
        { (i,1)  = child line number
          (i,2)  = CMC date of birth
          (i,3)  = Flag for date of birth
          (i,4)  = child day of birth from birth history (imputed)
          (i,7)  = mother's level of education
          (i,8)  = mother's year of education
          (i,9)  = Mother's line number
          (i,10) = child birth order
          (i,11) = child birth interval
          (i,12) = CS educational level for preliminar & final report
          (i,15) = CMC date of birth }

  numeric DaysMonth = 30.4375;
  numeric ignorey, xcluster, ncase, i, j, line, ucmcb, lcmcb;
  numeric di, xheight, xweight, mother, isyear, ismonth, isday, isage;
  numeric t, x, lcmc, ucmc, flag, cigarday;

PROC CCIQ81_FF
preproc

  ignorey  = 0;
  xcluster = 0;   { to know when a change of cluster in the data file occurred }
  ncase    = 0;   { to assign houshold numbers when there are dwelling and housholds as identifiers }

PROC HOUSEHOLD
preproc

  { example to modify identifiers when the concatenation of dwelling and household is 5+ digits }
  { ***
    if xcluster <> AHCLUST then
      ncase    = 0;
      xcluster = AHCLUST;
    endif;
    ncase    = ncase + 1;
    AHDWELL  = ncase;
    AHNUMBER = notappl;
   *** }

  { initialize women, men and children array }
  do varying i = 1 while i <= 50
    do varying j = 1 while j <= 15
      womvars(i,j) = notappl;
      manvars(i,j) = notappl;
      chlvars(i,j) = notappl;
    enddo;
  enddo;

postproc

  { Assigning women variables coming from level 2 }
  for i in ABSEC02_EDT do
    line   = AB202;
    if AB208M <> notappl then 
      di = cmcode(AB208M, AB208Y); 
    else 
      di = cmcode(ABINTM, ABINTY); 
    endif; 
    AWRESI = womvars(line,13);            { result code for all eligible women }
    if womvars(line,1) = line then        { complete interview for woman was in level 2 }
      AWCMC  = womvars(line,2);           { CMC for date of birth }
      AWFLG  = womvars(line,3);           { flag for date of birth }
      AWMBR  = (AWCMC-1) % 12 + 1;        { month of birth based on CMC }
      AWYBR  = int( (AWCMC-1)/12 )+1900;  { year of birth based on CMC }
      AWSMK  = womvars(line,4);           { smoking }
      AWPRG  = womvars(line,5);           { current pregnancy }
      AWMOS  = womvars(line,6);           { months of preganancy }
      AWED1  = womvars(line,7);           { highest educational level }
      AWED2  = womvars(line,8);           { years of education }
      AWED3  = womvars(line,12);          { highest educational level, !!! customized for country }
    else
      ucmcb  = di - AH07(line)*12;
      lcmcb  = ucmcb - 11;
      AWCMC  = random( lcmcb, ucmcb );
      AWFLG  = 6;
      AWMBR  = (AWCMC-1) % 12 + 1;
      AWYBR  = int( (AWCMC-1)/12 )+1900;
      AWSMK  = notappl;
      AWPRG  = notappl;
      AWMOS  = notappl;
      AWED1  = NAToZero( AH17A(line) );   { educational level }
      AWED2  = AH17B(line);               { years of education }
      AWED3  = NAToZero( AH17A(line) );   { educational level, !!! customized for country }
    endif;
    { Body Mass Index }
    if AB205 in 999.94:999.98,missing | AB207 in 999.4:999.8,missing then
      AWBM  = missing;
    else
      xweight = AB205;  { !!!if weight defined as integer divide it by 10 }
      xheight = AB207;  { !!!if height defined as integer divide it by 10 }
      AWBM = 100 * xweight / (xheight/100)^2;
      if AWBM < 1200 | AWBM > 6000 then           { Bounds checking }
        AWBM = 9998;
      endif;
    endif;
  enddo;

  { Assigning men variables coming from level 2 }

  for i in ABSEC03_EDT do
    line   = AB302;
    if AB308M <> notappl then 
      di = cmcode(AB308M, AB308Y); 
    else 
      di = cmcode(ABINTM, ABINTY); 
    endif; 
    AMRESI = manvars(line,13);            { result code for all eligible women }
    if manvars(line,1) = line then        { complete interview for man in level 2 }
      AMCMC  = manvars(line,2);           { CMC for date of birth }
      AMFLG  = manvars(line,3);           { flag for date of birth }
      AMMBR  = (AMCMC-1) % 12 + 1;        { month of birth based on CMC }
      AMYBR  = int( (AMCMC-1)/12 )+1900;  { year of birth based on CMC }
      AMSMK  = manvars(line,4);           { smoking }
      AMED1  = manvars(line,7);           { highest educational level }
      AMED2  = manvars(line,8);           { highest educational level }
      AMED3  = manvars(line,12);          { highest educational level, !!! customized for country }
    else
      ucmcb  = di - AH07(line)*12;
      lcmcb  = ucmcb - 11;
      AMCMC  = random( lcmcb, ucmcb );
      AMFLG  = 6;
      AMMBR  = (AMCMC-1) % 12 + 1;
      AMYBR  = int( (AMCMC-1)/12 )+1900;
      AMSMK  = notappl;
      AMED1  = NAToZero( AH17A(line) );   { educational level }
      AMED2  = AH17B(line);               { years of education }
      AMED3  = NAToZero( AH17A(line) );   { educational level, !!! customized for country }
    endif;
    { Men Antropometry }
    if AB305 in 999.94:999.98,missing | AB307 in 999.4:999.8,missing then
      AMBM  = missing;
    else
      xweight = AB305;  { !!!if weight defined as integer divide it by 10 }
      xheight = AB307;  { !!!if height defined as integer divide it by 10 }

      AMBM = 100 * xweight / (xheight/100)^2;
      if AMBM < 1200 | AMBM > 6000 then           { Bounds checking }
        AMBM = 9998;
      endif;
    endif;
  enddo;

  { --------------------------------------------------------------------------- }

  { Assigning children variables coming from level 2 }

  numeric xmeasurey, xmeasurem, xmeasured;	
  for i in ABSEC01_EDT do
    line = AB102;
    // date of measurement based on date of re-measure, date of measure or date of biomarker questionnaire
    if ABRTYPE in 2,3 & !ABWEIGHT in 99.90:99.98,missing,notappl & !ABHEIGHT in 999.0:999.8,missing,notappl then
	  ACCDCM = CDCode( ABRYEAR, ABRMONTH, ABRDAY );
      di = cmcode(ABRMONTH, ABRYEAR);
      xmeasurey = ABRYEAR;	  
      xmeasurem = ABRMONTH;	  
      xmeasured = ABRDAY;	  
	elseif AB109Y <> notappl then
	  ACCDCM = CDCode( AB109Y, AB109M, AB109D );
      di = cmcode(AB109M, AB109Y);
      xmeasurey = AB109Y;	  
      xmeasurem = AB109M;	  
      xmeasured = AB109D;	  
    else	  
	  ACCDCM = CDCode( ABINTY, ABINTM, ABINTD );
      di = cmcode(ABINTM, ABINTY);
      xmeasurey = ABINTY;	  
      xmeasurem = ABINTM;	  
      xmeasured = ABINTD;	  
	endif;
    if chlvars(line,1) = line then
      ACCMC = chlvars(line,2);                { CMC date of birth }
      ACCDC = chlvars(line,15);               { CDC date of birth }
	  ACAGEM = int((ACCDCM-ACCDC)/DaysMonth); { Child's age in months } 
      ACFLG = chlvars(line,3);                { flag for date of birth }
      ACMBR = (ACCMC-1) % 12 + 1;             { month of birth calculated }
      ACYBR = int( (ACCMC-1)/12 ) + 1900;     { year of birth calculated }
      ACDBR = chlvars(line,4);                { child day of birth from birth history (imputed) }
      ACMLN = chlvars(line,9);                { mother's line number }
      if ACMLN <> 0 then
        ACED1 = chlvars(line,7);              { mother's educational level }
        ACED2 = chlvars(line,8);              { mother's years of education }
        ACBO  = chlvars(line,10);             { birth order }
        ACBI  = chlvars(line,11);             { child interval }
        ACED3 = chlvars(line,12);             { mother's educational level !!! customized for country }
      else
        ACMLN = 993;   { non de facto mother }
        ACBO = missing;
        ACBI = missing;
        ACED1 = missing;
        ACED2 = notappl;
        ACED3 = missing;
        if AH12(line) = 1 then
          if AH13(line) <> 0 & AH13(line) <> missing then
            mother = AH13(line);
            ACED1 = NAtoZero( AH17A(mother) );
            ACED2 = AH17B(mother);
            ACED3 = NAtoZero( AH17A(mother) );    { !!! should be customized according to country report }
          else
            ACED1 = notappl;
            ACED2 = notappl;
            ACED3 = notappl;
          endif;
        endif;
      endif;
    else
      ACMLN = 995;     { not a household member }
      ACBO = missing;
      ACBI = missing;
      ACED1 = missing;
      ACED2 = notappl;
      ACED3 = notappl;
      if AH12(line) = 1 then
        if AH13(line) <> 0 & AH13(line) <> missing then
          ACMLN = 994; { not an eligible woman }
          mother = AH13(line);
          ACED1 = NAtoZero( AH17A(mother) );
          ACED2 = AH17B(mother);
          ACED3 = NAtoZero( AH17A(mother) );    { !! should be customized according to country report }
        endif;
      endif;

      isyear = 0; ismonth = 0; isage = 0;
      if valid(AB103M) then
        ismonth = 1
      endif;

      { Initialize logical ranges for date of birth of child }
      if validyr(AB103Y) then
        isyear = 1;
        lcmc = setlb( AB103M, AB103Y, 0 );
        ucmc = setub( AB103M, AB103Y, 9999 );
      else
        lcmc = di - 72;
        ucmc = di;
      endif;
      if valid(AH07(line)) then
        isage = 1;
      endif;
      isday = ( AB103D in 1:31 );

      recode isyear :: ismonth :: isday :: isage -> flag;
               1    ::    1    ::   1   ::       -> 0;
               1    ::    1    ::       ::       -> 1;
                    ::    1    ::       ::   1   -> 2;
               1    ::         ::       ::   1   -> 3;
               1    ::         ::       ::       -> 5;
                    ::         ::       ::   1   -> 6;
                    ::    1    ::       ::       -> 7;
                    ::         ::       ::       -> 8;
      endrecode;
      if ignorey & flag = 3 & AB103Y + AH07(line) = AHINTY then
        flag = 4;
        lcmc = di-59;
        ucmc = di;
      endif;
      ACFLG= flag;

      if valid( AH07(line) ) then
        { Lower bound of CMC date of birth }
        t = ndjlba(lcmc,ucmc,di,di,AH07(line));
        if t < 0 then
          errmsg( 2171, i, AB103M, AB103Y, xmeasurem, xmeasurey, AH07(line) );
        else
          lcmc = t;
        endif;
        { Upper bound of CMC date of birth }
        t = adjuba(lcmc,ucmc,di,di,AH07(line));
        if t < 0 then
          errmsg( 2171, i, AB103M, AB103Y, xmeasurem, xmeasurey, AH07(line) );
        else
          ucmc = t;
        endif;
        t = di - (AH07(line)*12 + 11);
        if lcmc < t & t <= ucmc then
          lcmc = t
        endif;
      endif;
      { Impute date of birth  }
      if lcmc > ucmc then
        errmsg( 9919, i, lcmc, ucmc );
        ACCMC = default
      elseif lcmc = ucmc then
        ACCMC = lcmc
      else
        ACCMC = random(lcmc,ucmc)
      endif;
      ACDBR  = AB103D;
      ACMBR  = (ACCMC - 1) % 12 + 1;
      ACYBR  = int( (ACCMC-1)/12 ) + 1900;
      if !ACDBR in 1:31 then
        ACDBR = ImputeDay( xmeasurey, xmeasurem, xmeasured, ACYBR, ACMBR );
      endif;
      ACCDC = CDCode( ACYBR, ACMBR, ACDBR );
	  ACAGEM = int((ACCDCM-ACCDC)/DaysMonth); { Child's age in months } 
    endif;
  enddo;
  
  { malaria variables coming from level 2, for women, men and children  }
  for i in AHSEC01_EDT do
     if i = womvars(i,1) then                   { woman from level 2 found }
       ML07I  = int( (AHINTC-womvars(i,2))/12 );
       ML07F  = womvars(i,3);
       MLPREG = womvars(i,5);
     elseif i = manvars(i,1) then               { man from level 2 found }
       ML07I  = int( (AHINTC-manvars(i,2))/12 );
       ML07F  = manvars(i,3);
       MLPREG = notappl;
     elseif i = chlvars(i,1) then               { child from level 2 found }
       if ABINTCD <> notappl then
         ML07I  = int( ( (ABINTCD-chlvars(i,15))/DaysMonth ) / 12 );
       else
         ML07I  = int( ( (AHINTCD-chlvars(i,15))/DaysMonth ) / 12 );
       endif;
       ML07F  = chlvars(i,3);
       MLPREG = notappl;
     else
       ML07I = AH07;
       { to make child's age in years consistent with age in months }
       do j = 1 while j <= totocc( ABSEC01 )
         if AB102(j) = AH01(i) then
           ML07I = int( ( (ABINTCD-ACCDC(j))/DaysMonth ) / 12 );          { age in months for children }
           break;
         endif;
       enddo;
       ML07F = 0;
       { !!! for incomplete woman's interview with anemia testing the }
       {     pregnancy status should be obtained from that section    }
       MLPREG = notappl;
     endif;
   enddo;

PROC INDIVIDUAL
preproc

  { example to modify identifiers when the concatenation of dwelling and household is 5+ digits }
  { ***
    ADWELL  = ncase;
    ANUMBER = notappl;
    *** }

  { store result of individual interview for everybody }
  if AQTYPE = 2 then
    womvars(ALINE,13) = ARESULT
  else
    manvars(ALINE,13) = ARESULT
  endif;
  { store women variables to be used in post-proc of level 1 }
  if ARESULT = 1 & AQTYPE = 2 then                         { complete women interview }
    line = ALINE;
    womvars(line,1) = ALINE;                               { woman's line number }
    womvars(line,2) = A110C;                               { CMC for date of birth }
    womvars(line,3) = A110F;                               { flag for date of birth }
    womvars(line,4) = 0;
    if A1106 = 1 & valid(A1107) then
      womvars(line,4) = A1107;                             { number of cigarettes a day }
      if A1107 > 80 then womvars(line,4) = 80 endif;
    endif;
    if A232 = 1 then
      womvars(line,5) = 1;                                 { current pregnancy }
      womvars(line,6) = AINTC - A233C;                     { months of preganancy }
    else
      womvars(line,5) = 0;                                 { current pregnancy }
      womvars(line,6) = notappl;                           { months of preganancy }
    endif;
    womvars(line,7)   = NAToZero(A114);                    { educational level }
    womvars(line,8)   = A115;                              { years of education }
    { !! following should be customized according to the education level in the country }
    womvars(line,12)  = NAToZero(A114);                    { educational level }

    { store children variables to be used in post-proc of level 1 }
    for i in AWSEC2B_EDT do
      line = A227;
      if A224 = 1 & A227 in 1:AHMEMBER & di-A220C < 84 then
        chlvars(line,1)  = line;             { child line number }
        chlvars(line,2)  = A220C;            { CMC date of birth }
        chlvars(line,3)  = A220F;            { Flag for date of birth }
        chlvars(line,4)  = A220DI;           { Day of birth (imputed) }
        chlvars(line,15) = A220CD;           { CDC date of birth }
        { dimensions 4,5,6 not used on purpose to make it compatible with women dimensions }
        chlvars(line,7)  = NAToZero(A114);   { mother's level of education }
        chlvars(line,8)  = A115;             { mother's year of education }
        { !! following should be customized according to the education level in the country }
        chlvars(line,12) = NAToZero(A114);   { mother's educational level }
        { establish birth order in a pregnancy history }
        numeric x215l = 0;
        do x = 1 while x <= i 
          if A223(x) = 1 then
            inc(x215l);
          endif;
        enddo;		  
        if AH06(ALINE) = 1 then              { Mother is de facto }
          chlvars(line,9)  = ALINE;          { Mother's line number }
          chlvars(line,10) = x215l;          { child birth order }
          do x = i - 1 while x > 0 & A220C(x) = A220C by (-1) enddo;
          if x = 0 then
            chlvars(line,11) = notappl;
          else
            chlvars(line,11) = int( (A220CD - A220CD(x)) / DaysMonth ); { child birth interval }
          endif;
        else
          chlvars(line,9)  = 0;
          chlvars(line,10) = notappl;;
          chlvars(line,11) = notappl;
        endif;
      endif;
    enddo;
  elseif ARESULT = 1 & AQTYPE = 1 then                         { complete men interview }
    { store men variables to be used in post-proc of level 1 }
    line = ALINE;
    manvars(line,1) = ALINE;                               { woman's line number }
    manvars(line,2) = AM110C;                              { CMC for date of birth }
    manvars(line,3) = AM110F;                              { flag for date of birth }
    manvars(line,4) = 0;
    { definition agreed with Fred on 12/14/2016. Include only cigarettes (maufactured, rolled or kreteks) }
    cigarday = 0;
    if AM806 = 1 then
      cigarday = NSmoke(AM809A) + NSmoke(AM809B) + NSmoke(AM809C);
    elseif AM806 = 2 then
      cigarday = (NSmoke(AM810A) + NSmoke(AM810B) + NSmoke(AM810C )) / 7;
    endif;
    if cigarday > 80 then cigarday = 80 endif;
    manvars(line,4) = cigarday;                          { number of cigarettes }
    manvars(line,7)  = NAToZero(AM114);                    { educational level }
    manvars(line,8)  = AM115;                              { years of education }
    { !! following should be customized according to the education level in the country }
    manvars(line,12) = NAToZero(AM114);                    { educational level }
  endif;                                                   { end complete interview }
