{Application 'LISTCLUST' logic file generated by CSPro }
PROC GLOBAL

  numeric wcluster, wenumerat, i, counthh, changes = 0, enumerator, nsegments = 0;
  numeric closedate, expectedhh;
  numeric ngps = 0, templat = 0, templon = 0, tempalt = 0;
  numeric xlatitude, xlongitude, xaltitude;
  alpha(1) latpole;
  alpha(1) lngpole;

  string line1;

PROC HHLISTING_FF
preproc
  { get language from calling menu }
  SetLanguage( GetLanguage() );

  wcluster  = tonumber( sysparm()[1:4] );
  wenumerat = tonumber( sysparm()[5:4] );

  nsegments = 0;        { number of segments in the cluster }
  counthh   = 0;        { total household counter }

  { set the name for the HTML file }
  HTML_InitAlign();
  HTMLname = "ListClust.HTML";
  if FileExist( HTMLname ) then
    FileDelete( HTMLname )
  endif;
  setfile( HTMLFile, HTMLname, create );

  { initialize the report headings }
  zstring1 = MakeText( tr("Households Eligible for Selection for Cluster: %04d Enumerator %04d"), wcluster, wenumerat );
  zstring2 = MakeText( tr("Date: %s"), edit("9999/99/99", SysDate("YYYYMMDD")));
  CellValues(1) = tr("HH");
  CellValues(2) = tr("Structure");
  CellValues(3) = tr("Household address");
  CellValues(4) = tr("Head of household");
  CellValues(5) = tr("Observations");
  { specify columns that are left aligned, strings are left aligned }
  CellAlign(1) = 3;  // column 3 is household address 
  CellAlign(2) = 4;  // column 4 head of household
  CellAlign(3) = 5;  // column 5 observations
  HTML_Header( CellAlign, zstring1 );  // generates a general HTML header
  HTML_BeginTable( CellValues, zstring2, 5 );  // generates the HTML table script with the column headers

postproc

  { Cluster segmentation report }
  SCLUSTER = wcluster;
  if loadcase( SEGMENT_DCT, SCLUSTER ) then
    zstring2 = tr("Cluster Segmentation");
    CellValues(1) = tr("Segment");
    CellValues(2) = tr("Households");
    CellValues(3) = tr("Cummulative");
    CellValues(4) = tr("Percent");
    HTML_Paragraph( " " );
    HTML_Paragraph( " " );
    HTML_BeginTable( CellValues, zstring2, 4 );  // generates the HTML table script with the column headers
    for i in SEGMENT_DCT.SEGREC2 do
      CellValues(1) = edit("99", SEGNUM);
      CellValues(2) = edit("Z99", SHHNUMB);
      CellValues(3) = edit("ZZ99",SCUMMUL);
      CellValues(4) = edit("Z99.9",SPERCENT);
      HTML_OneRow( CellValues, 4 );   // generates the HTML script for a row with relevant household data
	  nsegments = nsegments + 1;
    enddo;
    HTML_EndTable();
    HTML_Paragraph( " " );
    line1 = maketext(tr("Segment selected %d, Number of households in selected segment %d"), SSEGNUM, SSEGHH);
    HTML_ParagraphS( line1 );
  endif;
 
  {{GPS}
  { !!! Report coordinates when collected at cluster level }
  GCLUSTER = wcluster;
  if loadcase( GPS_DCT, GCLUSTER ) & GLATITUDE(1) <> notappl then
    zstring2 = tr("Cluster Coordinates");
    CellValues(1) = tr("Reading");
    CellValues(2) = tr("Latitude");
    CellValues(3) = tr("Longitude");
    CellValues(4) = tr("Altitude");
    CellValues(5) = tr("Satellites");
    CellValues(6) = tr("Accuraccy");
    HTML_Paragraph( " " );
    HTML_Paragraph( " " );
    HTML_BeginTable( CellValues, zstring2, 6 );  // generates the HTML table script with the column headers
    for i in GPS_DCT.GPSSEC do
      if GLATITUDE <> notappl then
	    ngps = ngps + 1;   // necessary to update control file
        CellValues(1) = edit("9", i);
        CellValues(2) = GLATPOLE + edit("ZZZ9.999", GLATITUDE);
        CellValues(3) = GLNGPOLE + edit("ZZZ9.999", GLONGITUDE);
        CellValues(4) = edit("ZZZ9",GALTITUDE);
        CellValues(5) = edit("Z9",GSATELLIT);
        CellValues(6) = edit("Z9",GACCURACY);
        HTML_OneRow( CellValues, 6 );   // generates the HTML script for a row with relevant household data
      endif;
    enddo;
    HTML_EndTable();
  endif;
  {GPS}}
  {+GPS}
  { !!! Report coordinates when collected at household level }
  if ngps > 0 then
    xlatitude  = templat / ngps;
    xlongitude = templon / ngps;
    xaltitude  = tempalt / ngps;
    zstring2 = tr("Cluster coordinates based on average from households");
    CellValues(1) = tr("Households");
    CellValues(2) = tr("Latitude");
    CellValues(3) = tr("Longitude");
    CellValues(4) = tr("Altitude");
    HTML_Paragraph( " " );
    HTML_Paragraph( " " );
    HTML_BeginTable( CellValues, zstring2, 4 );  // generates the HTML table script with the column headers
    CellValues(1) = edit("ZZ9", ngps);
    CellValues(2) = latpole + edit("ZZZ9.999", xlatitude);
    CellValues(3) = lngpole + edit("ZZZ9.999", xlongitude);
    CellValues(4) = edit("ZZZ9",xaltitude);
    HTML_OneRow( CellValues, 4 );   // generates the HTML script for a row with relevant household data
    HTML_EndTable();
  else
    HTML_Paragraph( " " );
    line1 = maketext(tr("There are no valid GPS coordinates for cluster %04d"), wcluster);
    HTML_ParagraphS( line1 );
  endif;
  {GPS+}

  { update control file }
  CSAMPLE = wcluster;
  if loadcase( CONTROL, CSAMPLE ) then
    { households listed for cluster }
    if CHTOTAL <> counthh then
      CHTOTAL = counthh;
      changes = 1;
    endif;
    { households expected based on census/segmentation }
    if CHEXPECT <> expectedhh then
      CHEXPECT = expectedhh;
      changes = 1;
    endif;
    { enumerator different from first enumerator }
    if CSUPERV <> enumerator then
      HTML_Paragraph( " " );
      line1 = maketext(tr("There was a change in enumerators: first enumerator %04d current enumerator %04d"), CSUPERV, enumerator );
      HTML_ParagraphS( line1 );
      CSUPERV = enumerator;
      changes = 1;
    endif;
    { GPS coordinates captured }
    if CGPSAVAIL = 0 & ngps >= 1 then
      CGPSAVAIL = 1;
      changes  = 1;
    endif;
    { date when cluster data was used by this program for the first time }
    if !CACCEPT then
      CACCEPT = sysdate("YYYYMMDD");
      changes = 1;
    endif;
    { date when cluster was declared as closed by the enumerator in the field }
    if CFINENUM = 0 & !closedate in 0,notappl | CFINENUM < closedate then
      CFINENUM = closedate;
      changes = 1;
    endif;
    { cluster segmentation }
    if CSEGMENT = 0 & nsegments >= 1 | CSEGMENT <> nsegments then
      CSEGMENT = nsegments;
      changes = 1;
    endif;
    if changes then
      writecase( CONTROL );
    endif;
  endif;
  HTML_End();
  view( "file://" + pathname(application) +  HTMLName );

PROC HHLISTING_QUEST

  enumerator = LINTNUM;
  closedate  = LDATEFIN;
  expectedhh = LSEGHH;
  for i in RECORD2 do
    if !LINTRO in "8","9" then
      { populates the elements of a row based on household information }
      if LTRUEHH = 1 then
        counthh = counthh + 1;
        CellValues(1) = edit("9999", LNUMBER);
      else
        CellValues(1) = "BLANK";
      endif;
      CellValues(2) = edit("9999", LSTRUCT) + "-" + edit("999",LHOUSEH);
      CellValues(3) = strip(LADDRESS);
      CellValues(4) = strip(LNAME);
      CellValues(5) = strip(LNOTES);
      HTML_OneRow( CellValues, 5 );   // generates the HTML script for a row with relevant household data
      { accumulate household coordinates to average them at the cluster level }
      if LALTITUDE <> notappl & LLONGITUDE <> notappl & LLATITUDE <> notappl then
        ngps  = ngps + 1;
        templat = templat + LLATITUDE;
        templon = templon + LLONGITUDE;
        tempalt = tempalt + LALTITUDE;
        if ngps = 1 then
		  latpole = LLATPOLE;
		  lngpole = LLNGPOLE;
		endif;
      endif;
    endif;
  enddo;
  HTML_EndTable();
  HTML_Paragraph( " " );
  line1 = maketext( tr("Households expected in cluster %d, households listed %d"), LSEGHH, counthh );
  HTML_ParagraphS( line1 );
  if LDATEFIN then
    HTML_Paragraph( " " );
    HTML_ParagraphS( tr("Cluster was already declared finalized by enumerator") );
  endif;
