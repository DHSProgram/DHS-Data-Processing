{Application 'ReportMiss' logic file generated by CSPro }
PROC GLOBAL

  numeric i, totclust = 0;

  array clustfound(5000);    { used to identify clusters for which no households were listed }
  array error(10);

PROC HHLISTING_FF
preproc
  { get language from calling menu }
  SetLanguage( GetLanguage() );

  while loadcase( CONTROL ) do
    totclust = totclust + 1;
  enddo;

  { initialize array of clusters found to zero }
  do i = 1 while i <= 5000
    clustfound(i) = 0;
  enddo;

  { set the name for the HTML file }
  HTML_InitAlign();
  HTMLname = "ReportMiss.HTML";
  if FileExist( HTMLname ) then
    FileDelete( HTMLname )
  endif;
  setfile( HTMLFile, HTMLname, create );

  { initialize the report headings }
  zstring1 = MakeText( tr("Report of Overall Missing Information") );
  zstring2 = MakeText( tr("Date: %s"), edit("9999/99/99", SysDate("YYYYMMDD")));
  CellValues(1) = tr("Cluster");
  CellValues(2) = tr("GPS missing");
  CellValues(3) = tr("Not accepted");
  CellValues(4) = tr("Not closed");
  CellValues(5) = tr("Observations");
  { specify columns that are left aligned, strings are left aligned }
  CellAlign(3) = 5;  // column 5 observations
  HTML_Header( CellAlign, zstring1 );  // generates a general HTML header
  HTML_BeginTable( CellValues, zstring2, 5 );  // generates the HTML table script with the column headers

postproc
  { list clusters that were not found in the household listing file               }
  { note that the array assumes that cluster numbers are sequential starting in 1 }
  do i = 1 while i <= totclust
    if clustfound(i) = 0 then
      CellValues(1) = edit("9999", i );
      CellValues(2) = "BLANK";
      CellValues(3) = "BLANK";
      CellValues(4) = "BLANK";
      CellValues(5) = tr("Cluster hasn't arrived yet to the central office");
      HTML_OneRow( CellValues, 5 );   // generates the HTML script for a row with relevant household data
    endif;
  enddo;
  HTML_EndTable();
  HTML_End();
  view( "file://" + pathname(application) +  HTMLName );

PROC HHLISTING_QUEST

  do i = 1 while i <= 10
    error(i) = 0;
  enddo;

  CSAMPLE  = LCLUSTER;
  if !loadcase( CONTROL, CSAMPLE ) then
    error(1) = 1;
  else

    { identify if a cluster is duplicated otherwise update array of clusters found }
    if clustfound(LCLUSTER) <> 0 then
      error(2) = 1;
    else
      clustfound(LCLUSTER) = LCLUSTER;
    endif;

    {+GPS}
    { !!! use when coordinates taken at cluster level check their presence }
    GCLUSTER = LCLUSTER;
    if !loadcase( GPS_DCT, GCLUSTER ) then
      error(3) = 1;
    endif;
    {GPS+}
    {+GPS}
    { !!! use when coordinates taken at household level }
    if !count( RECORD2_EDT where LLATITUDE <> notappl ) then
      error(3) = 1;
    endif;
    {GPS+}

    { check if cluster was already accepted by the central office }
    if CACCEPT = 0 then
      error(4) = 1;
    endif;

    { check if cluster was already closed by the central office }
    if CFINDATE = 0 then
      error(5) = 1;
    endif;
  endif;

  { check if there are errors in cluster }
  do i = 1 while i <= 10 & error(i) = 0
  enddo;
  { errors found }
  if i < 10 then
    CellValues(1) = edit("9999", LCLUSTER);
    if error(3) then
      CellValues(2) = tr("Y");
	else
      CellValues(2) = "BLANK";
    endif;
    if error(4) then
      CellValues(3) = tr("Y");
	else
      CellValues(3) = "BLANK";
    endif;
    if error(5) then
      CellValues(4) = tr("Y");
	else
      CellValues(4) = "BLANK";
    endif;
    if error(1) then
      CellValues(5) = tr("Cluster not defined in control file");
	else
      CellValues(5) = "BLANK";
    endif;
    if error(2) then
      CellValues(5) = tr("Cluster listed by 2 different enumerators");
	else
      CellValues(5) = "BLANK";
    endif;
    HTML_OneRow( CellValues, 5 );   // generates the HTML script for a row with relevant household data
  endif;


