PROC GLOBAL
  { DHS-8 Male Recode master application  version - 1.0.0 of 07/31/2021 }
  { Country = COUNTRY }

  numeric i, j, k, x;
  numeric temp, xtemp, stermetm, methoth, xprm, xsec;
  numeric knows, evuse, cuse, nsexp;
  numeric lastsex, xunit, xnumber;

  alpha(30)  methods;   { to map methods from the contraceptive table to the current use in AM418 }
  alpha(30)  currmeth;  { to generate current use of method in MV312 }

PROC CORE8_FF
preproc

  { Set the following variables to their correct codes }
  methods  = "FCD~GABLMYE~KH~IXJ";  { !! methods in contraceptive table.  Needs to be adapted if it is not the same as AM418 }
                                    {    otherwise it is the same as the following "currmeth" variable                        }
  currmeth = "FCD~GABLMYE~KH~IXJ";  { !! only methods in AM418. Replace unused methods in AM418 with "~" }
  stermetm = 2;                     { !! Code for male sterilization in questionnaire }
  methoth  = 14;                    { !! Code for other method in quest. }
  xprm     = 6;                     { !! Years for complete primary }
  xsec     = 6;                     { !! Years for complete secondary }
  open( MRecode8 );

postproc
  close( MRecode8 );

PROC HOUSEHOLD
preproc

  if AHELIGM <> 1 then skip case; endif;  { if household selected for male questionnaire }

PROC INDIVIDUAL
preproc
  { Keep incomplete cases, but drop non de facto cases (except for de jure samples) }
  { in CSPro it is important to drop other than male questionnaires as well }
  if AQTYPE <> 1 | AH04(ALINE) <> 1 | AH06(ALINE) <> 1 then skip case; endif;

  clear( MRecode8 );

postproc
  writecase( MRecode8 );

{ ---------------------------------------------------------------------------- }
PROC ASECOVER_EDT

  { ID should be identical to ID in Women's recode }
  { variables in record MREC01 }
  MCASEID = concat( "    ",
               edit("ZZZ9", AHCLUST),
               edit("ZZZ9", AHNUMBER),
               edit("ZZ9",  ALINE) );          { always ZZ9 for Line number }
  MV000 = "cc8";          { !! Country code + type of recode (not phase of DHS) }
  { Cluster number }
  MV001 = AHCLUST;
  { Household number }
  MV002 = AHNUMBER;
  { Respondent's line number }
  MV003 = ALINE;
  { Ultimate area unit }
  MV004 = AHCLUST;              { !! }
  { Sample weight }
  MV005 = AWEIGHT;
  if ARESULT <> 1 then MV005 = 0 endif;
  { Month of interview }
  MV006 = AINTM;
  { Year of interview }
  MV007 = AINTY;
  { Date of interview (CMC) }
  MV008 = AINTC;
  { century day code of interview }
  MV008A = CDCode( AINTY, AINTM, AINTD );
  if ARESULT = 1 then
    { Respondent's month of birth }
    MV009 = (AM110C-1) % 12 + 1;
    { Respondent's year of birth }
    MV010 = int( (AM110C-1)/12 ) + 1900;
    { Date of birth (CMC) }
    MV011 = AM110C;
    { Current age - respondent }
    MV012 = AM111C;
    { Age 5-year groups }
    recode MV012 -> MV013;
           15:19 -> 1;
           20:24 -> 2;
           25:29 -> 3;
           30:34 -> 4;
           35:39 -> 5;
           40:44 -> 6;
           45:49 -> 7;
           50:54 -> 8;
           55:59 -> 9;
           60:64 -> 10;
    endrecode;
    { Completeness of information }
    MV014 = AM110F;          { !! completeness flag - check coding }
  endif;
  MV015 = ARESULT;           { !! check coding correct }
  { Day of interview }
  MV016 = AINTD;
  { Primary sampling unit }
  MV021 = AHCLUST;          { !! }
  { Sample strata for sampling errors }
  MV022 = AHSTRATA;          { !! obtain it from sampling specialist }
  { Stratification used in sampling design }
  recode AHTYPE :: AHREGION -> MV023;            { !! obtain it from sampling specialists }
           1    ::    1     -> 1;                { etc..., }
  endrecode;
  { Region }
  MV024 = AREGION;
  { Type of place of residence }
  MV025 = ATYPE;
  { !!!! candidate to be removed from DHS-9 recode, it was removed since DHS-6 }	
  { De facto place of residence }
  MV026 = notappl;      { !! in case country has the old locality variable }
  { Number of visits }
  MV027 = AVISITS;
  { Interviewer identification }
  MV028 = AINTNUM;
  { Keyer identification }
  MV029 = notappl;
  { Field supervisor }
  MV030 = ASUPERV;
  { Field editor }
  MV031 = notappl;
  { Office editor }
  MV032 = notappl;
  do i = 1 while i <= nOccurs(AMSEC04_GRP000)
    { Line numbers of wives, partners }
    MV034(i)  = AM407(i);
    { Wife or partner }
    { !!!! candidate to be removed from DHS-9 recode, it was used only in DHS-4 }	
    MV034A(i) = notappl;               { !! wife/partner may exist for country }
    { Age of wife/partner }
    MV034B(i) = AM408(i);
  enddo;
  { Number of wives, partners }
  MV035 = nOccurs(AMSEC04_GRP000);
  { Language of questionnaire }
  MV045A = ALANGQ;
  { Language of interview }
  MV045B = ALANGI;
  { Language of respondent }
  MV045C = ALANGR;
  { Translator used }
  MV046 = YesNo( ATRANS );
  { Team number }
  MV047 = ATEAM;
  { Team supervisor }
  MV048 = notappl;                  { !! make sure to populate it if used }

  { Time interview started } { Time interview ended }
  if MV015 = 1 then
    MV801 = AM101H * 100 + AM101M;
    if AM101H in 97,98,missing | AM101M in 97,98,missing then
      MV801 = missing
    endif;
    { Time interview ended }
    MV802 = AM819H * 100 + AM819M;
    if AM819H in 97,98,missing | AM819M in 97,98,missing then
      MV802 = missing
    endif;
    { Length of interview in minutes }
    if AVISITS = 1 then
      if MV801 = missing | MV802 = missing then
        MV803 = missing
      else
        MV803 = (AM819H * 60 + AM819M) - (AM101H * 60 + AM101M);
        if MV803 > 95 then MV803 = 95 endif
      endif
    else
      MV803 = 96
    endif;
    if MV803 = default | MV803 < 0 then
      errmsg( 8030, MV803, AM101H, AM101M, AM819H, AM819M );
      MV803 = 97
    endif;
  endif;       { end MV015 = 1 for interview time }

  { ---------------------------------------------------------------------------- }
  { Variables in record MREC11 }
  if MV015 = 1 then
  { Region }
    MV101 = AREGION;
    { Type of place of residence }
    MV102 = ATYPE;
    { !!!! candidate to be removed from DHS-9 recode, it hasn't been used since DHS-5 }	
    { Childhood place of residence }
    MV103 = notappl;        { !! child place of residence }
    { Years lived in place of res. }
    MV104 = AM104;
    { Type of place of previous res. }
    MV105 = AM108;
    { Region of previous residence }
    MV105A = AM107;         { !! make sure to use the same code schema as that of MV101 }
    { Highest educational level }
    MV106 = LevEduc( AM113, AM114 );
    { Highest year of education }
    MV107 = GraEduc( AM114, AM115 );
    { !! religion }
    MV130 = AM130;
    if AM130 = 6 then MV130 = 96 endif;   { !! code 96 for other }
    { !! ethnicity }
    MV131 = AM131;
    { Education in single years }
    MV133 = SingEduc( MV106, MV107, xprm, xsec );
    { !!!! candidate to be removed from DHS-9 recode, it was removed since DHS-6 }	
    { De facto place of residence }
    MV134 = MV026;
    { Usual resident or visitor }
    MV135 = AH05(ALINE);
    { Number of household members }
    MV136 = NAtoZero( AHMEMBER );
    { Number of eligible men in HH }
    MV138 = count( AHSEC01_EDT where AH10 <> 0 & AH06 = 1);
    { Educational attainment }
    MV149 = AttnEduc( MV106, MV107 );
    { relationship to head of household }
    MV150 = AH03(MV003);          { !! check coding }
    { if (MV150 in 9:11) then
        MV150 = MV150 + 1
      endif; }
    x = default;
    do i = 1 while i <= soccurs(AHSEC01)
      if AH03(i) = 1 & x = default then
        x = i;    { head of household }
      endif;
    enddo;
    if x = default then x = 1 endif;
    MV151 = AH04(x); { Sex of household head }
    MV152 = AH07(x); { Age of household head }
    { Literacy }
    recode AM117 -> MV155;
            1:5  -> AM117-1;
         notappl -> 2;
                 -> missing;
    endrecode;
    { !!!! candidate to be removed from DHS-9 recode, it was removed since DHS-6 }	
    { Ever participated in a literacy program outside of primary }
    MV156 = notappl;
    { Frequency of reading newspaper or magazine }
    recode  AM119 -> MV157;
               3  -> 0;         { not at all }
               2  -> 1;         { less than once a week }
               1  -> 2;         { at least once a week }
         missing  -> missing;
                  -> 0;
    endrecode;
    { Frequency of listening to radio }
    recode  AM120 -> MV158;
               3  -> 0;         { not at all }
               2  -> 1;         { less than once a week }
               1  -> 2;         { at least once a week }
         missing  -> missing;
                  -> 0;
    endrecode;
    { Frequency of watching television }
    recode  AM121 -> MV159;
               3  -> 0;         { not at all }
               2  -> 1;         { less than once a week }
               1  -> 2;         { at least once a week }
         missing  -> missing;
                  -> 0;
    endrecode;

    { times away from home last 12 months }
    MV167 = notappl;
    { Away for more than one month }
    MV168 = notappl;
    { Owns a mobile telephone }
    MV169A    = YesNo( AM122 );
    { Use mobile telephone for financial transactions }
    MV169B    = YesNo( AM617C );
	{ Is respondent's mobile phone a smart phone }
    MV169C    = YesNo( AM123 );
    { Has an account in a bank or other financial institution }
    MV170     = YesNo( AM617A );
    { Use of internet }
    recode AM127 :: AM128 -> MV171A;
             2   ::       -> 0;     { never }
             1   ::   1   -> 1;     { Yes, last 12 months }
             1   ::   2   -> 2;     { Yes, before last 12 months }
             1   ::       -> 3;     { Yes, can't establish when }
                 ::       -> AM127;
    endrecode;
    { Frequency of using internet last month }
    recode AM129 -> MV171B;
              4  -> 0;       { not at all }
              3  -> 1;       { less than once a week }
              2  -> 2;       { at least once a week  }
              1  -> 3;       { almost every day      }
       missing   -> missing;
                 -> 0;
    endrecode;
	
    { Respondent state of birth }
	MV172   = AM102;
    { Respondent country of birth }
	MV173   = AM103;
    { Month move to current place of residence }
	MV174M  = AM106M;
    { Year move to current place of residence }
	MV174Y  = AM106Y;
    { Reason for moving to current place of residence }
	MV175   = AM109;
    { Self reported health status }
	MV176   = AM112;
    { Money put/taken from bank account last 12 months }
	MV177   = YesNo(AM617B);

    { Wealth index variables }
    MV190  = AHWLTHI;    { HH wealth index combined }
    MV191  = AHWLTHF;	 { Wealth index factor score combimed (5 decimals) }
    MV190A = AHWLTIUR;   { HH wealth index for urban/rural }
    MV191A = AHWLTFUR;	 { Wealth index factor score for urban/rural (5 decimals) }

  endif;                { end MV015 = 1 for MREC11 }

  { ---------------------------------------------------------------------------- }
  { variables in MREC22 }
  if MV015 = 1 then
    { Total children ever born }
    MV201 = AM208;
    { Sons at home }
    MV202 = NAtoZero( AM203A );
    { Daughters at home }
    MV203 = NAtoZero( AM203B );
    { Sons elsewhere }
    MV204 = NAtoZero( AM205A );
    { Daughters elsewhere }
    MV205 = NAtoZero( AM205B );
    { Sons who have died }
    MV206 = NAtoZero( AM207A );
    { Daughters who have died }
    MV207 = NAtoZero( AM207B );
    { Age of respondent at 1st birth }
    MV212 = AM211;
    { Partner currently pregnant }
    MV213 = yesno( AM504 );
    if MV213 = notappl then
      MV213 = yesno( AM509 );
    endif;
    { Knowledge of ovulatory cycle }
    recode AM304 :: AM305 -> MV217;
              1  ::    1  -> 4;
              1  ::  2:4  -> AM305-1;
              1  ::       -> AM305;
              2  ::       -> 5;
                 ::       -> AM304;
    endrecode;
    { Number of living children }
    MV218 = MV202+MV203+MV204+MV205;

    { !!!! candidate to be removed from DHS-9 recode, it was removed since DHS-5 }	
    MV225 = notappl;    { !! wanted last pregnancy }

    { number of women had fathered with }
    if MV201 = 0 | MV201 = 1 then
      MV245 = MV201
    elseif AM210 = 2 then
      MV245 = 95               { more than 1 woman, but unkown number }
    elseif AM210 = 1 then
      MV245 = 1
    else
      MV245 = AM210
    endif;

    { !!!! candidate to be removed from DHS-9 recode, it was removed since DHS-5 }	
    MV246 = notappl;    { !! married to respondent's first child mother }

    if MV201 then
      { Age of youngest child }
      MV247  = AM213;
      { Antenatal check-ups for the mother for youngest child }
      MV248 = YesNo( AM216 );
      { Respondent present during check-ups for youngest child }
      MV249 = YesNo( AM217 );
      { Place of birth of youngest child }
      MV250 = AM218;
      { !!!! candidate to be removed from DHS-9 recode, it was removed since DHS-6 }	
      { Reason for not delivering youngest child in health facility }
      MV251 = notappl;
      { Drinking pattern when child has diarrhea }
	  MV252 = notappl;
	  { Did go with child's mother to health facility for birth }
      MV253 = YesNo( AM219 );
    endif;

  endif;            { end MV015 = 1 for MREC22 }

{ ---------------------------------------------------------------------------- }
{ Variables in MREC31, contraceptive table }
  if MV015 = 1 then
    do i = 1 while i <= 20
      { If method does not exist in questionnaire, set j to zero }
      { Recode => Questionnaire, contraceptive table }
      recode i -> j;         { Used to recode occurrences }
             1 -> 6;         { Pill }
             2 -> 3;         { IUD }
             3 -> 4;         { Injection }
             4 -> 0;         { Diaphragm, not used unless included in country }
             5 -> 7;         { Condom }
             6 -> 1;         { Female sterilization }
             7 -> 2;         { Male sterilization }
             8 -> 12;        { Rhythm/Periodic abstinence }
             9 -> 13;        { Withdrawal }
            10 -> methoth+1; { Other }
            11 -> 5;         { Norplant/implants }
            12 -> 0;         { Long term Abstinence : not used unless included in country }
            13 -> 11;        { Lactational amenorrhea (LAM) }
            14 -> 8;         { Female condom }
            15 -> 0;         { Foam or jelly, not used unless included in country }
            16 -> 9;         { Emergency contraception }
            17 -> methoth;   { other modern method }
            18 -> 10;        { Standard Days (SDM) }
            19 -> 0;         { CS methods }
            20 -> 0;         { CS methods }
               -> 0;
      endrecode;
      recode i          -> x;
           1:7,11,13:18 -> 1; { Modern methods }
           8:9,12       -> 2; { Traditional methods }
           10,19:20     -> 3; { Folkloric methods }
      endrecode;
      M304A(i) = x;

      if j then
        { !!! note that in DHS VII, there is only one occurrence for other traditional methods    }
        { and also that there is a one to one correspondence between the contraceptive table and  }
        { current method.  As a result the code have been simplified significantly.  Check the    }
        { recode for phase VI if the survey contraceptive table reseembles the one for that phase }
        knows = AM301(j);          { Knows method }
        evuse = notappl;
        cuse  = notappl;
        { !!! the instructions below should be used in case ever used was asked }
        { ***USE
        evuse = EVERUSE(j);       { Ever used method }
        if evuse = 1 then
          cuse  = ( pos(methods[i:1],AM418) > 0 );     { Currently using method }
        endif;
        ***USE }
        { ever used method or knows method but question on ever used not asked }
        if knows = 1 then
          if j = 7 & AM419 = 1 then                       { for condom }
            cuse = 1
          else
            cuse  = ( pos(methods[i:1],AM418) > 0 );      { Currently using method }
          endif;
        endif;
        recode knows -> xtemp;
                   1 -> 1;
                   2 -> 0;
             notappl -> 8;
           8,missing -> missing;
                     -> default;
        endrecode;
        if xtemp = default then errmsg( 3040, i, knows ) endif;
        MV304(i) = xtemp;            { Knows method }
        MV305(i) = YesNo( evuse );   { Ever used method }
        MV307(i) = cuse;             { Currently using method }
      elseif i in 4,15 then          { !! methods declared in current use but not in contraception table }
        MV304(i) = 7;
        MV305(i) = notappl;
        if i = 4 then
          MV307(i) = ( pos("~",AM418) > 0 );      { diaphragm }
        elseif i = 15 then
          MV307(i) = ( pos("~",AM418) > 0 );      { foam/jelly }
        endif;
      else
        MV304(i) = 8;
        MV305(i) = notappl;
        MV307(i) = notappl;
      endif;
    enddo;

    { ---------------------------------------------------------------------------- }
    {*****  Methods:
     1-Pill                   2-IUD                          3-Injection
     4-Diaphragm              5-Condom                       6-Fem.Sterlization
     7-male sterilization     8-Rhythm                       9-Withdrawal
    10-Other                 11-Norplant                    12-Abstinence
    13-Lactational amenorr   14-Female condom
    15-Foam or jelly         16-Emergency contraception     17-Specific method 1
    18-Specific method 2     19-Specific method 3           20-Specific method 4
    ***** }
    MV301 = 0;                              { Knows No Method }
    MV302 = notappl;                        { !! Used  No Method, change to zero if ever used asked in contraceptive table }
    do i = 1 while i <= 20
      if MV304(i) = 1 & M304A(i) < 4 - MV301 then
        MV301 = 4 - M304A(i);
      endif;
      if MV305(i) = 1 & M304A(i) < 4 - MV302 then
        MV302 = 4 - M304A(i);
      endif;
    enddo;

  endif;           { end MV015 = 1 for MREC31 }

{ ---------------------------------------------------------------------------- }
{ variables in MREC32, contraception use }
  if MV015 = 1 then
    { You/your partner used any method to avoid pregnancy during last intercourse }	
    MV312A = YesNo( AM416 );
    cuse  = pos( AM418[1:1], strip(currmeth) );  { Current method }
    { following in case condom is used with more efective method }
    if AM419 = 1 & !pos(AM418[1:1], "ABCDEF") then  // !!! include in string methods more effective than male condom
      MV312 = 5             { condom }
    else
      MV312 = cuse;
    endif;
    recode MV312      -> MV313;             { Sets Current Method, grp Trad. vs Modern }
         missing      -> missing;
         notappl      -> notappl;
              98      -> 8;
              0       -> 0;
         1:7,11,13:18 -> 3;
         8:9,12       -> 2;
                      -> 1;
    endrecode;

    { brand of condom }
    MV323A = notappl;
    { !!!! candidate to be removed from DHS-9 recode, it was removed since DHS-6 }	
    { cost of condoms }
    MV325B = notappl;
    { !!!! candidate to be removed from DHS-9 recode, it was removed since DHS-6 }	
    { Shown condom package }
    MV372A = notappl;

    { FP on media }
    MV384A = YesNo( AM302A );     { Heard family planning on radio last months }
    MV384B = YesNo( AM302B );     { Heard family planning on TV last months }
    MV384C = YesNo( AM302C );     { Heard family planning on newspaper last months }
    MV384D = YesNo( AM302D );     { Heard family planning by mobile phone text messages }
    MV384E = YesNo( AM302E );     { Seen about family planning on facebook, twitter, instagram, others }
    MV384F = YesNo( AM302F );     { Seen about family planning on poster, brochure }
    MV384G = YesNo( AM302G );     { Seen about family planning on outdoor sign, billboard }
    MV384H = YesNo( AM302H );     { Heard family planning at community meetings events }
    MV384I = notappl;             { !!! Heard/seen family planning CS }
    MV384J = notappl;             { !!! Heard/seen family planning CS }
    MV384K = notappl;             { !!! Heard/seen family planning CS }

    { discussed FP with health worker last few months }
    MV395 = YesNo( AM303 );

    { !!!! candidate to be removed from DHS-9 recode, it was removed since DHS-6 }	
    { women get pregnant while breastfeeding }
    MV396 = notappl;
    { can women get pregnant after birth of a child before period return }
    MV396A = YesNo( AM306 );

    { Source of family planning for non-users: no source/any source }
    if AM417 = missing then
      MV3A00Y = missing;
      MV3A00Z = missing;
    elseif AM417 = 2 then
      MV3A00Y = 1;
      MV3A00Z = 0;
    elseif AM417 = 1 then
      MV3A00Y = 0;
      MV3A00Z = 1;
    endif;

    { !!!! candidate to be removed from DHS-9 recode, it was removed since DHS-6 }	
    { number of condoms got last time }
    MV3A09B = notappl;
    { source of condoms }
    MV3B17 = notappl;

    { contraception perception }
    MV3B25A = YesNo( AM307A );            { contraception is woman business }
    MV3B25B = YesNo( AM307B );            { woman use contraception may become promiscuous }

  endif;          { end of MV015 = 1 for MREC32 }

{ ---------------------------------------------------------------------------- }
{ variables in MREC41, smoking, tuberculosis and other health issues }
  if MV015 = 1 then
    { smoking practices }
    MV463A  = Notappl;                        { cigarettes }
    MV463B  = Notappl;                        { pipe }
    MV463C  = Notappl;                        { chewing tobacco }
    MV463D  = Notappl;                        { snuff }
    MV463E  = Notappl;                        { !! CS }
    MV463F  = Notappl;                        { !! CS }
    MV463G  = Notappl;                        { !! CS }
    MV463X  = Notappl;                        { other }
    MV463Z  = Notappl;                        { smokes nothing }
    { Frequency smokes tobacco }
    MV463AA  = Fr3toZro( AM806 );
    { Frequency smokes or uses other type of tobacco }
    MV463AB  = Fr3toZro( AM811 );
    { In the past smoked tobacco every day }
    MV463AC  = YesNo( AM807 );
    { Frequency in the past smoked tobacco }
    MV463AD  = Fr3toZro( AM808 );
    { Number of cigarettes in the last 24 hours }
    MV464   = Notappl;
    { On average respondent smokes daily: }
    MV464A = NAToZero( AM809A );      { manufactured cigarettes }
    MV464B = NAToZero( AM809B );      { hand roll cigarettes }
    MV464C = NAToZero( AM809C );      { kreteks }
    MV464D = NAToZero( AM809D );      { pipes full of tobacco }
    MV464E = NAToZero( AM809E );      { cigars, cheroots, cigarrillos }
    MV464F = NAToZero( AM809F );      { water pipe sessions }
    MV464G = NAToZero( AM809G );      { others }
    { On average respondent uses daily: }
    MV464H = NAToZero( AM812A );      { snuff by mouth }
    MV464I = NAToZero( AM812B );      { snuff by nose }
    MV464J = NAToZero( AM812C );      { chewing tobacco }
    MV464K = NAToZero( AM812D );      { betel quid with tobacco }
    MV464L = NAToZero( AM812E );      { any others }
    { On average respondent smokes weekly: }
    MV484A = NAToZero( AM810A );      { manufactured cigarettes }
    MV484B = NAToZero( AM810B );      { hand roll cigarettes }
    MV484C = NAToZero( AM810C );      { kreteks }
    MV484D = NAToZero( AM810D );      { pipes full of tobacco }
    MV484E = NAToZero( AM810E );      { cigars, cheroots, cigarrillos }
    MV484F = NAToZero( AM810F );      { water pipe sessions }
    MV484G = NAToZero( AM810G );      { others }
    { On average respondent uses weekly: }
    MV484H = NAToZero( AM813A );      { snuff by mouth }
    MV484I = NAToZero( AM813B );      { snuff by nose }
    MV484J = NAToZero( AM813C );      { chewing tobacco }
    MV484K = NAToZero( AM813D );      { betel quid with tobacco }
    MV484L = NAToZero( AM813E );      { any others }

    { Number of injections in last 12 months }
    MV477  = notappl;
    { Number of injections administered by a health worker }
    MV478  = notappl;
    { !!!! candidate to be removed from DHS-9 recode, it was removed since DHS-6 }	
    { Place where given injection by health worker }
    MV479  = notappl;
    { Syringe and needle from new, unopened package }
    MV480  = notappl;

    { health insurance related variables }
    MV481  = YesNo( AM817 );
    MV481A = alfa2num( AM817, AM818, "A" );  { mutual/community health insurance }
    MV481B = alfa2num( AM817, AM818, "B" );  { through employer }
    MV481C = alfa2num( AM817, AM818, "C" );  { social security }
    MV481D = alfa2num( AM817, AM818, "D" );  { other private }
    MV481E = notappl;                        { !! CS }
    MV481F = notappl;                        { !! CS }
    MV481G = notappl;                        { !! CS }
    MV481H = notappl;                        { !! CS }
    MV481X = alfa2num( AM817, AM818, "X" );  { other }

    { child arrangements if unable }
    { !!!! candidates to be removed from DHS-9 recode, they were removed since DHS-6 }	
    { Arrange care of biological children under age 18 }
    MV482A = notappl;
    { Primary caregiver of children under age 18 }
    MV482B = notappl;
    { Arrange care of non-biological children < 18 }
    MV482C = notappl;

    { circumcision related questions including female genital cutting }
    { is respondent circumcised }
    MV483  = YesNo( AM801 );
    { Age at traditional circumcision }
    MV483A = AM803;
    { Who performed the circumcision }
    MV483B = notappl;
    { Place where circumcision was done }
    MV483C = notappl;
	{ Is respondent traditionally circumcised }
    MV483D = YesNo( AM802 );
	{ Is respondent medically circumcised }
    MV483E = YesNo( AM804 );
    { Age at medical circumcision }
    MV483F = AM805;
	
	{ Number of days respondent drank alcoholic drinks in the past month }
	recode AM814 -> MV485A;
	         2   -> 96;       // never had consumed alcohol
			 1   -> AM815;
			     -> AM814;
    endrecode;
	{ Number of alcoholic drinks per day }
    MV485B  = AM816; 	

  endif;    { end MV015 = 1 for MREC41 }

{ ---------------------------------------------------------------------------- }
{ variables in MREC51, marriage and exposure }
  if MV015 = 1 then
    { Current marital status }
    recode AM401 :: AM402 -> MV501;
            1:2  ::       -> AM401;
                 ::   3   -> 0;
                 ::  1:2  -> AM403+2;
                 ::       -> missing;
    endrecode;

    { Currently/formerly/never married }
    recode MV501 -> MV502;
              0  -> 0;
            1,2  -> 1;
          3,4,5  -> 2;
        missing  -> missing;
    endrecode;

    { married/lived more than once }
    recode AM410 -> MV503;
             1   -> 2;
             2   -> 1;
                 -> AM410;
    endrecode;

    { wife living with respondent }
    MV504 = AM404;
    { number of wives }
    recode AM405 -> MV505;
             2   -> 1;       { one wife }
             1   -> AM406;
                 -> AM405;
    endrecode;

    { month of first marriage }
    MV507 = (AM411C - 1) % 12 + 1;
    { Year of first marriage }
    MV508 = int( (AM411C - 1)/12 ) + 1900;
    { Date of first marriage (CMC) }
    MV509 = AM411C;
    { Completeness of date inform. }
    MV510 = AM411F;         { !! check coding }
    { Age at first marriage }
    if MV501 <> 0 then
      MV511 = int( (MV509 - MV011)/12 )
    else
      MV511 = notappl
    endif;
    { Years since first marriage }
    if MV501 <> 0 then
      MV512 = int( (MV008 - MV509)/12 )
    else
      MV512 = notappl
    endif;
    { Marital duration (grouped) }
    if MV512 = notappl then
      MV513 = 0
    else
      recode MV512 -> MV513;
             0:4   -> 1;
             5:9   -> 2;
            10:14  -> 3;
            15:19  -> 4;
            20:24  -> 5;
            25:29  -> 6;
            30:64  -> 7;
      endrecode;
    endif;

    { age at first sex }
    if AM414 = 0 then      { Never had sex }
      MV525 = 0
    else
      MV525 = AM414;
      if AM414 = 95 then MV525 = 96 endif;  { age at first sex, at first union }
      if AM414 = refused then MV525 = missing endif; 
    endif;

    { time since last sexual intercourse }
    if MV525 = 0 then
      MV527 = notappl
    else
      MV527 = unitnumb( AM415U, AM415N );
    endif;

    { Time since last intercourse(g) }
    recode MV527 -> MV528;
         notappl -> notappl;
         199,299 -> missing;
         399,499 -> missing;
         100:130 -> MV527 - 100;
         131:198 -> 31;
         200:204 -> (MV527 - 200) * 7;
         205:499 -> 31;
         990:999 -> MV527 - 900;
         missing -> missing;
    endrecode;

    { Time since last intercourse(imputed) }
    if AM414 = 0 | AM415N = notappl then
      MV529 = notappl
    elseif AM415U = 9 | AM415N in missing,refused then
      MV529 = missing
    elseif AM415N > 90 then
      MV529 = 900 + AM415N
    else
      recode AM415U -> MV529;
               1    -> int(AM415N/30);
               2    -> int(AM415N/4.3);
               3    -> AM415N;
               4    -> AM415N*12;
               9    -> 900 + AM415N;
      endrecode
    endif;

    { imputed age at first sexual intercourse }
    if MV525 = 96 then
      MV531 = MV511
    else
      MV531 = MV525
    endif;
    if AM414F = 3 then     { Reduce by one year - assumes reported age at birth }
      MV531 = MV531 - 1
    elseif !AM414F in 0,6 then
      MV531 = 97
    endif;
    { Flag for MV531 }
    MV532 = AM414F;         { !! check coding }

    { ever been married/living together }
    MV535 = AM402; if AM402 = 3 then MV535 = 0 endif;

    { recent sexual activity }
    recode AM415U ::  AM415N -> LastSex;
                  :: missing -> missing;
             1    ::         -> int( AM415N / 7 );
             2    ::         -> AM415N;
             3    ::         -> AM415N * 4.3;
             4    ::         -> AM415N * 52;
                  ::         -> missing;
    endrecode ;
    if AM414 = 0 then
      MV536 = 0;
    elseif lastsex = missing then
      MV536 = missing
    elseif lastsex <= 3 then
      MV536 = 1;
    else
      MV536 = 3;
    endif ;

    { !!!! candidates to be removed from DHS-9 recode, was only used in DHS-5 }	
    { intend to wait until married to have sex }
    MV541 = notappl;

  endif;      { end MV015 = 1 for MREC51 }

{ ---------------------------------------------------------------------------- }
{ variables in MREC61, fertility preferences }
  if MV015 = 1 then
    { fertility preference }
    if MV312 in 7 then
      MV602 = 4
    elseif noccurs( AMSEC04_GRP ) = 1 then
      if MV213 = 1 then
        recode AM505 -> MV602;
                 1   -> 1;       { have another }
                 2   -> 3;       { no more }
                 8   -> 2;       { undecided/DK }
                     -> missing;
        endrecode;
      else
        recode AM507 -> MV602;
                 1   -> 1;       { have another }
                 2   -> 3;       { no more }
                 3   -> 5;       { wife/partner infecund }
                 4   -> 4;       { wife/partner sterilized }
                 8   -> 2;       { undecided/DK }
                     -> missing;
        endrecode;
      endif;
    else
      if MV213 = 1 then
        recode AM510 -> MV602;
                 1   -> 1;       { have another }
                 2   -> 3;       { no more }
                 8   -> 2;       { undecided/DK }
                     -> missing;
        endrecode;
      else
        recode AM512 -> MV602;
                 1   -> 1;       { have another }
                 2   -> 3;       { no more }
                 3   -> 5;       { wife/partner infecund }
                 4   -> 4;       { wife/partner sterilized }
                 8   -> 2;       { undecided/DK }
                     -> missing;
        endrecode;
      endif;
    endif;
    { special adjustments }
    if AM506N = 94 | AM508N = 94 | AM511N = 94 | AM513N = 94 then        { Says can't get pregnant }
      MV602 = 5
    elseif AM507 = notappl & AM512 = notappl & AM414 = 0 then            { never had sex }
      MV602 = 6
    elseif !AM401 in 1,2 then                                            { man has no partner }
      MV602 = 8
    endif;

    { preferred waiting time }
    if MV602 = 1 then
      xunit   = AM506U;
      xnumber = AM506N;
      if AM508U <> notappl then
        xunit   = AM508U;
        xnumber = AM508N;
      endif;
      if AM511U <> notappl then
        xunit   = AM511U;
        xnumber = AM511N;
      endif;
      if AM513U <> notappl then
        xunit   = AM513U;
        xnumber = AM513N;
      endif;
      MV603 = unitnumb( xunit, xnumber );
      if MV603 = 993 then MV603 = 994                     { Soon/now }
      elseif MV603 = 994 then MV603 = default             { Can't get pregnant }
      elseif MV603 = 995 then MV603 = 993                 { After marriage }
      endif;
    endif;

    { Preferred waiting time (grpd) }
    recode MV603   -> MV604;
           notappl -> notappl;
           missing -> missing;
       199,299,999 -> missing;
       198,298,998 -> 8;
               994 -> 0;                      { Soon/Now }
             >=990 -> 7;                      { Non:numeric }
           100:171 -> int( (MV603-100)/12 );
           172:197 -> 6;
           200:205 -> MV603-200;
           206:297 -> 6;
                   -> default;
    endrecode;
    { Desire for more children }
    recode MV602 :: MV604 -> MV605;
             1   ::   0:1 -> 1;
             1   ::   2:6 -> 2;
             1   ::       -> 3;
             2   ::       -> 4;
             3   ::       -> 5;
             4   ::       -> 6;
             5   ::       -> 7;
             6   ::       -> 8;
             7   ::       -> 7;
             8   ::       -> missing;      { husband has no partner }
       missing   ::       -> missing;
       notappl   ::       -> notappl;
                 ::       -> default;
    endrecode;

    { ideal number of children }
    MV613 = AM514;

    { Ideal number of children (grp) }
    recode MV613-> MV614;
            0:6 -> MV613;
          <= 90 -> 6;
                -> 7;          { non numeric response }
    endrecode;

    { time for future birth }
    if AM506U <> notappl | AM508U <> notappl | AM511U <> notappl | AM513U <> notappl then
      xunit   = AM506U;
      xnumber = AM506N;
      if AM508U <> notappl then
        xunit   = AM508U;
        xnumber = AM508N;
      endif;
      if AM511U <> notappl then
        xunit   = AM511U;
        xnumber = AM511N;
      endif;
      if AM513U <> notappl then
        xunit   = AM513U;
        xnumber = AM513N;
      endif;
      MV616 = unitnumb( xunit, xnumber );
      if MV616 = 993 then MV616 = 994               { Soon/Now }
      elseif MV616 = 994 then MV616 = 995           { Can't get pregnant }
      elseif MV616 = 995 then MV616 = 993           { After marriage }
      endif;
    endif;

    { !!!! candidates to be removed from DHS-9 recode, removed since in DHS-5 }	
    { wife desire for children }
    MV621 = notappl;              { !! may exist in country }

    { ideal number of children by sex }
    if AM515A = notappl then
      { Ideal number of boys }
      MV627 = MV613;
      { Ideal number of girls }
      MV628 = MV613;
      { Ideal number of either sex }
      MV629 = MV613;
    else
      MV627 = AM515A;
      MV628 = AM515B;
      MV629 = AM515C;
    endif;

    { !!!! candidate to be removed from DHS-9 recode, removed since in DHS-5 }	
    { problem if wife become pregnant }
    MV631 = notappl;              { !! may exist in country }

    { !!!! candidates to be removed from DHS-9 recode (except for MV633B), they were removed since in DHS-6 }	
    { reason for women not having sex with husband }
    MV633A = notappl;               { husband has STD }
    MV633B = yesno( AM736 );        { knows husband has sex with other women }
    MV633C = notappl;               { women gave birth recently }
    MV633D = notappl;               { woman tired, not in a mood }
    MV633E = notappl;               { !! CS }
    MV633F = notappl;               { !! CS }
    MV633G = notappl;               { !! CS }

    { !!!! candidates to be removed from DHS-9 recode, they were removed since in DHS-6 }	
    { if wife refusex sex, husband has the right to: }
    MV634A = notappl;               { get angry }
    MV634B = notappl;               { refuse financial support }
    MV634C = notappl;               { use force to have sex }
    MV634D = notappl;               { have sex with other women }

  endif;        { end MV015 = 1 for MREC61 }

{ ---------------------------------------------------------------------------- }
{ variables in MREC71, employment }
  if MV015 = 1 then
    { working currently }
    if AM601 = 1 then
      MV714 = 1;
    else
      MV714 = yesno( AM602 );
    endif;
    { Have a job from which respondent was absent }
    MV714A = yesno( AM602 );

    { occupation }
    MV716 = NAtoZero( AM604 );
    { !! standard occupation is country specific }
    recode  MV716  -> MV717;
             0     ->  0;       { Not currently working or not since 12 months ago }
                   ->  1;       { Professional/technical/managerial                         }
                   ->  2;       { Clerical                                                  }
                   ->  7;       { Services                                                  }
                   ->  3;       { Sales                                                     }
                   ->  4;       { Agricultural - self employed                              }
                   ->  5;       { Agricultural - employee                                   }
                   ->  6;       { Household and domestic                                    }
                   ->  8;       { Skilled manual                                            }
                   ->  9;       { Unskilled manual                                          }
           99998   -> 98;	      { Don't know                                                }
          missing  -> missing;
                   -> default;  { !! - Add in country specific recoding }
    endrecode;

    { Work for family, others, self }
    MV719 = notappl;
    { !!!! candidates to be removed from DHS-9 recode, for men it has been used ocassionally in early phases }	
    { Works at home or away }
    MV721 = notappl;      { !! may exist in country }

    { worked in last 12 months }
    if MV714 = 1 then
      MV731 = 2
    else
      MV731 = YesNo( AM603 );
    endif;

    { Employment all year/seasonal }
    MV732 = AM605;

    { who decides how to spend respondent earnings }
    recode AM609 -> MV739;
             1   -> 1;       { respondent alone }
             2   -> 4;       { wife/partner alone }
             3   -> 2;       { respondent & partner }
             6   -> 5;       { someone else }
                 -> AM609;
    endrecode;

    { type of land where respondent works }
    MV740 = notappl;

    { type of earnings }
    recode AM606 -> MV741;
             4   -> 0;       { not paid }
                 -> AM606;
    endrecode;

    { final say on own health care }
    recode AM610 -> MV743A;
             1   ->  1;          { 1 Respondent                         }
             2   ->  4;          { 2 Wife                               }
             3   ->  2;          { 3 both equally                       }
             4   ->  5;          { 4 Someone else                       }
           { 5   ->  3;          !! 5 Respondent & someone else jointly }
                 ->  AM610;      { 8 Decision not made/not applicable   }
    endrecode;
    { final say on large household purchases }
    recode AM611 -> MV743B;
             1   ->  1;          { 1 Respondent                         }
             2   ->  4;          { 2 Wife                               }
             3   ->  2;          { 3 both equally                       }
             4   ->  5;          { 4 Someone else                       }
           { 5   ->  3;          !! 5 Respondent & someone else jointly }
                 -> AM611;       { 8 Decision not made/not applicable   }
    endrecode;
    { !!! MV743C to MV743G candidates to be removed from DHS-9, it was removed since DHS-6 } 
    { !!! check woman's recode to remove variable consistenly                              }    	
    { final say on small daily householold purchases }
    MV743C = notappl;
    { final say on wife's visit to relatives }
    MV743D = notappl;
    { final say on food to be cooked every day }
    MV743E = notappl;
    { final say on what to do with money wife earns }
    MV743F = notappl;
    { final say on how many children to have }
    MV743G = notappl;

    { wife beating justified if: }
    MV744A = yesno( AM618A );   { goes out without telling husband }
    MV744B = yesno( AM618B );   { neglects children }
    MV744C = yesno( AM618C );   { argues with him }
    MV744D = yesno( AM618D );   { refuses to have sex }
    MV744E = yesno( AM618E );   { burns food }
	
    { Owns a house alone or jointly }
    MV745A = AM612;
    if AM612 = 6 then MV745A = 0 endif;
    { Title deed on house own by respondent }
    recode AM613 :: AM614 -> MV745C;
             1   ::   1   -> 1;      { Has a title deed and respondent on title }
             1   ::   2   -> 2;      { Has a title deed but respondent not on title }
             1   ::       -> 3;      { Has a title DK if respondent on title }
             2   ::       -> 0;      { Does not have a title deed }
                 ::       -> AM613;
    endrecode;
    { Owns land alone or jointly }
    MV745B = AM615;
    if AM615 = 6 then MV745B = 0 endif;
    { Title deed on land own by respondent }
    recode AM616 :: AM617 -> MV745D;
             1   ::   1   -> 1;      { Has a title deed and respondent on title }
             1   ::   2   -> 2;      { Has a title deed but respondent not on title }
             1   ::       -> 3;      { Has a title DK if respondent on title }
             2   ::       -> 0;      { Does not have a title deed }
                 ::       -> AM616;
    endrecode;

    { !!! candidates to be removed from DHS-9, it was removed since DHS-6 } 
    { husband perception about woman's pregnancy }
    MV747A = notappl;           { childbearing is woman's concern }
    MV747B = notappl;           { crucial woman has medical assistance at delivery }

    { Respondent's father ever beat his mother }
    MD121   = yesno( AM619 );  
	
  endif;        { end MV015 = 1 for MREC71 }

{ ---------------------------------------------------------------------------- }
{ variables in records MREC75 & MREC80, AIDS and STDs }
  if MV015 = 1 then
    { knowledge of STIs }
    MV750 = ( AM701 = 1 | AM729 = 1 );
    if MV750 <> 1 then
      if special( AM701 ) then
        MV750 = AM701;
      elseif special( AM729 ) then
        MV750 = AM729;
      endif ;
    endif ;

    { knowledge of AIDS }
    MV751 = YesNo( AM701 );

    { prompted responses to prevent AIDS }
    MV754CP = notappl;
    MV754DP = notappl;
    MV754JP = notappl;
    MV754WP = notappl;
    MV756   = notappl;
	if MV012 in 15:24 & MV751 = 1 then
      MV754BP = notappl;             { not having sex at all }
      MV754CP = YesNo( AM705 );      { always use condoms during sex }
      MV754DP = YesNo( AM703 );      { one uninfected partner who has no other partners }
      MV754JP = YesNo( AM704 );      { mosquito bites }
      MV754WP = YesNo( AM706 );      { sharing food with persons with AIDS }
      { possible for a healthy looking person to have AIDS }
      MV756 = YesNo( AM707 );
	  { following instructions resolve problems that could have been caused by imputation }
	  if MV754CP = notappl then
        MV754CP = missing;
        MV754DP = missing;
        MV754JP = missing;
        MV754WP = missing;
        MV756   = missing;
      endif;
    endif;	  

    { variables coming from the sexual section }
    { MV761x, MV767x, MV768x, MV821x, MV832x, MV833x, MV834x, MV835x }
    { last sexual partner }
    if MV525 <> 0 & MV527 < 400 then     { had sex last year }
      { Last intercourse used condom }
      MV761  = ( AM419 = 1 | poschar("GH",AM418) );
      { Relationship with last sex partner }
      recode AM422 -> MV767A;
               1   -> 1;      { husband }
               2   -> 7;      { live-in partner }
               3   -> 2;      { boy friend not living w/respondent }
               4   -> 4;      { casual acquaintance }
               5   -> 6;      { prostitute }
               6   -> 96;     { other }
                   -> AM422;
      endrecode;
      { !!! candidate to be removed from DHS-9, it was removed since DHS-6 } 	
      { Length of time knows last partner }
      MV768A = notappl;
      { Used condom every time had sex with last sex partner (last 12 months) }
      MV833A = notappl;
      { Age of last sexual partner }
      MV834A = notappl;
      { !!! candidate to be removed from DHS-9, it was removed since DHS-6 } 	
      { Alcohol consumption last time had sex }
      MV835A = notappl;
      { How long ago first had sex with last partner }
      MV852A = notappl;
      { Times in last 12 months had sex with last partner }
      MV853A = notappl;
    endif;
    { 2nd most recent sexual partner }
    if AM423 = 1 then
      { Used condom with 2nd most recent sexual partner }
      MV761B  = YesNo( AM424 );
      { Relationship with 2nd most recent sexual partner }
      recode AM425 -> MV767B;
               1   -> 1;      { husband }
               2   -> 7;      { live-in partner }
               3   -> 2;      { boy friend not living w/respondent }
               4   -> 4;      { casual acquaintance }
               5   -> 6;      { prostitute }
               6   -> 96;     { other }
                   -> AM425;
      endrecode;
      { !!! candidate to be removed from DHS-9, it was removed since DHS-6 } 	
      { Length of time knows 2nd most recent sexual partner }
      MV768B = notappl;
       { Time since last intercourse with 2nd most recent sexual partner }
      MV832B = notappl;
      { Used condom every time had sex with 2nd most recent sexual partner }
      MV833B = notappl;
      { Age of 2nd most recent sexual partner }
      MV834B = notappl;
      { !!! candidate to be removed from DHS-9, it was removed since DHS-6 } 	
      { Alcohol consumption with 2nd most recent sexual partner }
      MV835B = notappl;
      { How long ago first had sex with 2nd most recent sexual partner }
      MV852B = notappl;
      { Times in last 12 months had sex with 2nd most recent sexual partner }
      MV853B = notappl;
    endif;
    { 3rd most recent sexual partner }
    if AM426 = 1 then
      { Used condom with 3rd most recent sexual partner }
      MV761C = YesNo( AM427 );
      { Relationship with 3rd most recent sexual partner }
      recode AM428 -> MV767C;
               1   -> 1;      { husband }
               2   -> 7;      { live-in partner }
               3   -> 2;      { boy friend not living w/respondent }
               4   -> 4;      { casual acquaintance }
               5   -> 6;      { prostitute }
               6   -> 96;     { other }
                   -> AM428;
      endrecode;
      { !!! candidate to be removed from DHS-9, it was removed since DHS-6 } 	
      { Length of time knows 3rd most recent sexual partner }
      MV768C = notappl;
      { Time since last intercourse with 3rd most recent sexual partner }
      MV832C = notappl;
      { Used condom every time had sex with 3rd most recent sexual partner }
      MV833C = notappl;
      { Age of 3rd most recent sexual partner }
      MV834C = notappl;
      { !!! candidate to be removed from DHS-9, it was removed since DHS-6 } 	
      { Alcohol consumption last time had sex with 3rd most recent sexual partner }
      MV835C = notappl;
      { How long ago first had sex with 3rd most recent sexual partner }
      MV852C = notappl;
      { Times in last 12 months had sex with 3rd most recent sexual partner }
      MV853C = notappl;
    endif;

    { source for male condoms for last sexual intercourse }
    MV762   = AM421;
    { Brand of condoms used for last sex }
    MV762A = AM420;
	
    { STI in the last 12 months }
    if AM414 = 0 then   { Never had sex.  Need to check because of skip from ZM742 }
      MV763A = 0;
      MV763B = 0;
      MV763C = 0;
      MV763D = notappl;                     { !! CS }
      MV763E = notappl;                     { !! CS }
      MV763F = notappl;                     { !! CS }
      MV763G = notappl;                     { !! CS }
    else
      MV763A = NAtoZero( YesNo(AM732) );    { disease through sexual contact (STD) }
      MV763B = YesNo( AM734 );              { sore or ulcer near penis }
      MV763C = YesNo( AM733 );              { abnormal discharge }
      MV763D = notappl;                     { !! CS }
      MV763E = notappl;                     { !! CS }
      MV763F = notappl;                     { !! CS }
      MV763G = notappl;                     { !! CS }
    endif ;

    { sexual partners in last 12 months }
	nsexp = (AM415U in 1:3) + (AM423 = 1) + (AM426 = 1 ); 
    if AM414 = 0 | AM415U = 4 then  { never had sex/more than 1 year ago }
      MV766B = 0;
    elseif AM415U = 9 | AM415N in missing,refused then
      MV766B = missing;
    elseif nsexp <= 2 then          { one or two sex partners }
      MV766B  = nsexp
    else
      MV766B  = 98;                 { unknown }
    endif;
    { No. other than wife had sex in last 12 months }
    MV766A = nsexp;              { New logic here allows for two different spouses in one year }
    if nsexp > 0 then
      if nsexp >= 1 & AM422 in 1,2 then         { last sex with spouse, live-in partner }
        MV766A = MV766A - 1;
      endif;
      if nsexp >= 2 & AM425 in 1,2 then         { second to last sex with spouse, live-in partner }
        MV766A = MV766A - 1;
      endif;
      if nsexp >= 3 & AM428 in 1,2 then         { third to last sex with spouse, live-in partner }
        MV766A = MV766A - 1;
      endif;
    endif ;

    { sources of advise/treatment for STI }
    MV770  = notappl;
    MV770A = notappl;   { public hospital }
    MV770B = notappl;   { !! CS public sector }
    MV770C = notappl;   { !! CS public sector }
    MV770D = notappl;   { !! CS public sector }
    MV770E = notappl;   { !! CS public sector }
    MV770F = notappl;   { !! CS public sector }
    MV770G = notappl;   { !! CS public sector }
    MV770H = notappl;   { !! CS public sector }
    MV770I = notappl;   { !! CS public sector }
    MV770J = notappl;   { !! CS public sector }
    MV770K = notappl;   { private hospital/clinic/doctor }
    MV770L = notappl;   { !! CS private sector }
    MV770M = notappl;   { !! CS private sector }
    MV770N = notappl;   { !! CS private sector }
    MV770O = notappl;   { !! CS private sector }
    MV770P = notappl;   { !! CS private sector }
    MV770Q = notappl;   { !! CS private sector }
    MV770R = notappl;   { !! CS private sector }
    MV770S = notappl;   { !! CS private sector }
    MV770T = notappl;   { !! CS other }
    MV770U = notappl;   { !! CS other }
    MV770V = notappl;   { !! CS other }
    MV770W = notappl;   { !! CS other }
    MV770X = notappl;   { other }
    
    { transmission of AIDS from mother to child }
    MV774A = notappl;   { during pregnancy }
    MV774B = notappl;   { during delivery }
    MV774C = notappl;   { by breastfeeding }

    { !!! candidate to be removed from DHS-9, it was removed since DHS-6 } 	
    { knows someone suspected to have AIDS }
    MV775  = notappl;

    { would want to remain secret if family member infected }
    MV777 = notappl;               { !!! removed from DHS-VII but my be used by survey }
    { Would be ashamed if someone in the family had HIV }
    MV777A  = notappl;
    { would be willing to care for relative with AIDS }
    MV778 = notappl;               { !!! removed from DHS-VII but my be used by survey }
    { female teacher with AIDS should be allowed to continue teaching }
    MV779 = notappl;               { !!! removed from DHS-VII but my be used by survey }
    { should children be taught about condoms }
    MV780 = notappl;               { !!! removed from DHS-VII but my be used by survey }

    { ever been tested for AIDS }
    MV781 = NaToZero( YesNo( AM713 ) );

    { knowledge of places for AIDS testing }
    MV783  = notappl;
    MV784A = notappl;   { public hospital }
    MV784B = notappl;   { !! CS public other }
    MV784C = notappl;   { !! CS public other }
    MV784D = notappl;   { !! CS public other }
    MV784E = notappl;   { !! CS public other }
    MV784F = notappl;   { !! CS public other }
    MV784G = notappl;   { !! CS public other }
    MV784H = notappl;   { !! CS public other }
    MV784I = notappl;   { !! CS public other }
    MV784J = notappl;   { !! CS public other }
    MV784K = notappl;   { private hospital/clinic/doctor }
    MV784L = notappl;   { !! CS private other }
    MV784M = notappl;   { !! CS private other }
    MV784N = notappl;   { !! CS private other }
    MV784O = notappl;   { !! CS private other }
    MV784P = notappl;   { !! CS private other }
    MV784Q = notappl;   { !! CS private other }
    MV784R = notappl;   { !! CS private other }
    MV784S = notappl;   { !! CS private other }
    MV784T = notappl;   { !! CS other }
    MV784U = notappl;   { !! CS other }
    MV784V = notappl;   { !! CS other }
    MV784X = notappl;   { other }

    { heard about other STIs }
    MV785  = YesNo( AM729 );

    { Have ever paid anyone in exchange for sex }
    { if respondent had sex with prostitutes it is assumed to be paid }
    MV791  = notappl;
    { Last 12 months have given gifts or other goods to have sex }
    MV791A = notappl;
    { Have ever given gifts or other goods to have sex }
    MV791B = notappl;
    { last 12 months paid anyone for sex }
    { if respondent had sex with prostitutes it is assumed to be paid }
    MV793  = notappl;

    { condom used last time had paid sex, assume that sex with prostitute was paid }
    MV793A = notappl;
    { last 12 months used condoms every time paid for sex }
    MV793B = notappl;

    { !!! candidate to be removed from DHS-9, it was removed since DHS-6 } 	
    { condom use at first sex }
    MV820   = notappl;
    { wife justified to ask husband to use condom if he has STI }
    MV822   = YesNo( AM735 );
    { get AIDS by wichcraft or supernatural means }
    MV823   = notappl;
    { Drugs to avoid HIV transmission to baby during pregnancy }
    MV824   = yesno( AM709 );
    { would buy vegetables from shopkeeper with AIDS }
    MV825   = yesno( AM723 );

    { !!! candidate to be removed from DHS-9, it was removed since DHS-6 } 	
    { last time tested for HIV }
    MV826   = notappl;
    { Months ago most recent HIV test, now calculated based on date }
    MV826A  = notappl;
    if AM713 = 1 then
	  if AM714M in 1:12 & AM714Y in 1980:2027 then
        MV826A = MV008 - cmcode(AM714M,AM714Y);
		if MV826A >= 96 then MV826A = 96 endif;
      else
        MV826A = 98;	  
	  endif;
    endif;	  
    { !!! candidate to be removed from DHS-9, it was removed since DHS-6 } 	
    { last HIV test was offered or required }
    MV827   = notappl;

    { did get results from last test }
    MV828   = yesno( AM716 );
    { place where last test took place }
    MV829  = AM715;

    { lifetime sexual partners }
    MV836  = AM429;
    { Heard of drugs to help HIV infected people live longer }
    MV837  = YesNo( AM708 );

    { Knowledge and use of HIV test kits }
    recode AM721 :: AM722 -> MV856;
            2   ::        -> 0;      { Never heard of HIV test kits }
            1   ::   1    -> 1;      { Havs tested with HIV test kits }
            1   ::   2    -> 2;      { Knows test kits but never tested with them }
            1   ::        -> 3;      { Knows test kits un-known if tested }
                ::        -> AM721;
    endrecode;
    { Children with HIV should be allowed to attend school with children without HIV }
    MV857A  = YesNo( AM724 );
    { People hesitate to take HIV test because reaction of other people if positive }
    MV857B  = notappl;
    { People talk badly about people with or believed to have HIV }
    MV857C  = notappl;
    { People with or believed to have HIV lose respect from other people }
    MV857D  = notappl;
    { Would be afraid to get HIV from contact with saliva from infected person }
    MV858   = notappl;
	
    { Knowledge and attitude to PrEP to prevent getting HIV }
	recode AM710 :: AM711 -> MV859;
	         2   ::       -> 0;
	         1   ::   1   -> 1;
	         1   ::   2   -> 2;
	         1   ::   8   -> 3;
	             ::       -> AM710;
    endrecode;				 
    { Date of most recent HIV test: Month, Year, CMC }
    if AM713 = 1 then
	  MV860M = AM714M;
	  MV860Y = AM714Y;
	  if AM714M in 1:12 & AM714Y in 1980:2027 then
        MV860C = cmcode(AM714M,AM714Y)
      else		
        MV860C = 9998
	  endif;
    endif;
    { Result of HIV test }
	MV861  = AM717;
    { Date received first HIV test positve: Month, Year, CMC }
	if AM717 = 1 then
	  MV862M = AM718M;
	  MV862Y = AM718Y;  if AM718M = 95 then MV862Y = 9995 endif;
	  if AM718M in 1:12 & AM718Y in 1980:2027 then
        MV862C = cmcode(AM718M,AM718Y)
      elseif AM718M = 95 then 
	    MV862C = MV860C		
      else		
        MV862C = 9998
	  endif;
	endif;
    { Currently taking ARVs }
	MV863  = YesNo( AM719 );
    { Number of HIV tests }
	MV864  = AM720;
    { Disclosed HIV status to others }
	MV865  = YesNo( AM726 );
    { Respondent feels ashamed of HIV status }
	MV866  = YesNo( AM727 );
    { Things happened because HIV positive status: }
	MV867A = YesNo( AM728A );    { people talk badly }
	MV867B = YesNo( AM728B );    { someone else disclosed status }
	MV867C = YesNo( AM728C );    { verbally insulted/harassed/threatened }
	MV867D = YesNo( AM728D );    { healthcare workers talked badly }
	MV867E = YesNo( AM728E );    { healthcare workers verbally abused }
	MV867F = notappl;            { !!! CS }
	MV867G = notappl;            { !!! CS }

  endif;      { end MV015 = 1  for MRC75 & MREC80 }

{ ---------------------------------------------------------------------------- }
{ variables in records MRECGC, female genital cutting }
  if MV015 = 1 then               {result = 1 }
    { ever heard }
    MG100  = YesNo( GCM01 );
    { ever heard probed }
    MG101  = YesNo( GCM02 );
    if MG100 = 1 | MG101 = 1 then         { ever heard of circumcision }

      { !!! candidates to be removed from DHS-9, they were removed since DHS-6 } 	
      { benefits of circumcision }
      MG117A  = notappl;                         { cleanliness/hygiene }
      MG117B  = notappl;                         { social acceptance }
      MG117C  = notappl;                         { better marriage prospects }
      MG117D  = notappl;                         { preserve virginity }
      MG117E  = notappl;                         { more pleasure for man }
      MG117F  = notappl;                         { religious approval }
      MG117G  = notappl;                         { !! CS }
      MG117H  = notappl;                         { !! CS }
      MG117I  = notappl;                         { !! CS }
      MG117J  = notappl;                         { !! CS }
      MG117X  = notappl;                         { other }
      MG117Y  = notappl;                         { no benefits }

      { Female circumcision required by religion }
      MG118  =  YesNo( GCM03 );
      { Female circumcision: continue or be stopped }
      MG119  =  GCM04;

    endif;    { end ever heard of circumcision }

  endif;      { end MV015 = 1 for MRECGC }

{ ---------------------------------------------------------------------------- }
{ country specific variables for man's questionnaire }
  if MV015 = 1 then               {result = 1 }

  endif;      { end MV015 = 1 for country speific records }

{ ----------------------------------------------------------------------------}

PROC AMSECCHD_EDT
  { chronic disease - module }
  if MV015 = 1 then
    { Ever had blood pressure measured by doctor other healthcare worker }
    MCHD01  = YesNo( AMCHD01 );
    { Ever been told that you have high blood pressure or hypertension }
    MCHD02  = YesNo( AMCHD02 );
    { In past 12 months have been told that you have high blood pressure or hypertension }
    MCHD03  = YesNo( AMCHD03 );
    { Have been prescribed medication to control high blood pressure }
    MCHD04  = YesNo( AMCHD04 );
    { Are you taken medication to control your blood pressure }
    MCHD05  = YesNo( AMCHD05 );
    { Ever had blood sugar measured by doctor other healthcare worker }
    MCHD06  = YesNo( AMCHD06 );
    { Ever been told that you have high blood sugar or diabetes }
    MCHD07  = YesNo( AMCHD07 );
    { In past 12 months have been told that you have high blood sugar or diabetes }
    MCHD08  = YesNo( AMCHD08 );
    { Have been prescribed medication to control high blood sugar }
    MCHD09  = YesNo( AMCHD09 );
    { Are you taken medication to control your blood sugar }
    MCHD10  = YesNo( AMCHD10 );
    { Ever been told by a doctor or other healthcare worker that you have heart disease }
    MCHD11  = YesNo( AMCHD11 );
    { Are you receiving any treatment for your heart disease or chronic heart condition }
    MCHD12  = YesNo( AMCHD12 );
    { Ever been told by a doctor or other healthcare worker that you have lung disease }
    MCHD13  = YesNo( AMCHD13 );
    { Are you receiving any treatment for your lung disease }
    MCHD14  = YesNo( AMCHD14 );
    { Ever been told by a doctor or other healthcare worker that you have cancer or a tumor }
    MCHD15  = YesNo( AMCHD15 );
    { Are you receiving any treatment for cancer or tumor }
    MCHD16  = YesNo( AMCHD16 );
    { Ever been told by a doctor or other healthcare worker that you have depression }
    MCHD17  = YesNo( AMCHD17A );
    { Ever been told by a doctor or other healthcare worker that you have anxiety }
    MCHD18  = YesNo( AMCHD17B );
    { Are you receiving any treatment for depression or anxiety }
    MCHD19  = YesNo( AMCHD19 );
    { Ever been told by a doctor or other healthcare worker that you have arthritis }
    MCHD20  = YesNo( AMCHD20 );
    { Are you receiving any treatment for arthritis }
    MCHD21  = YesNo( AMCHD21 );
    { Ever been told by a doctor or other healthcare worker that you have other chronic disease }
    MCHD22  = YesNo( AMCHD22 );
    { Are you receiving any treatment for other chronic disease }
    MCHD23  = YesNo( AMCHD23 );
  endif;	

{ ---------------------------------------------------------------------------- }

PROC AMSECMH_EDT
  { mental health - module }
  if MV015 = 1 then
    MMTH1   = AMMTHGAD1;                      { Last 2 weeks: feeling nervous, anxious, on edge } 
    MMTH2   = AMMTHGAD2;                      { Last 2 weeks: not able to stop/control worrying }
    MMTH3   = AMMTHGAD3;                      { Last 2 weeks: worrying about things }
    MMTH4   = AMMTHGAD4;                      { Last 2 weeks: trouble relaxing }
    MMTH5   = AMMTHGAD5;                      { Last 2 weeks: restless and hard to sit still }
    MMTH6   = AMMTHGAD6;                      { Last 2 weeks: become easily annoyed/irritable }
    MMTH7   = AMMTHGAD7;                      { Last 2 weeks: feeling afraid as something awful might happen }
    MMTH8   = AMMTHPHQ1;                      { Last 2 weeks: little interest/pleasure in doing things }
    MMTH9   = AMMTHPHQ2;                      { Last 2 weeks: feeling down, depressed or hopeless }
    MMTH10  = AMMTHPHQ3;                      { Last 2 weeks: trouble falling asleep or sleeping too much } 
    MMTH11  = AMMTHPHQ4;                      { Last 2 weeks: feeling tired or having little energy }
    MMTH12  = AMMTHPHQ5;                      { Last 2 weeks: poor appetite or overeating }
    MMTH13  = AMMTHPHQ6;                      { Last 2 weeks: feeling bad about yourself, you are a failure or let yourself or family down }
    MMTH14  = AMMTHPHQ7;                      { Last 2 weeks: trouble concentrating in reading or watching TV }
    MMTH15  = AMMTHPHQ8;                      { Last 2 weeks: moving/speaking slowly or moving around a lot more than usual }
    MMTH16  = AMMTHPHQ9;                      { Last 2 weeks: thoughts of better off dead or hurting yourself }
    MMTH17  = YesNo(AMMTH2);                  { Ever tried to seek help for the things you experienced }
    if AMMTH2 = 1 then	
      MMTH18A = Alfa2num(1, AMMTH3, "A");    { doctor/medical personnel }
      MMTH18B = Alfa2num(1, AMMTH3, "B");    { social service organization }
      MMTH18C = Alfa2num(1, AMMTH3, "C");    { social worker }
      MMTH18D = Alfa2num(1, AMMTH3, "D");    { community health worker/fieldworker }
      MMTH18E = Alfa2num(1, AMMTH3, "E");    { religious leader }
      MMTH18F = Alfa2num(1, AMMTH3, "F");    { current/former spouse/partner }
      MMTH18G = Alfa2num(1, AMMTH3, "G");    { other family member }
      MMTH18H = Alfa2num(1, AMMTH3, "H");    { friend }
      MMTH18I = Alfa2num(1, AMMTH3, "I");    { neighbor }
      MMTH18J = notappl;                     { CS } 
      MMTH18K = notappl;                     { CS }  
      MMTH18L = notappl;                     { CS }  
      MMTH18M = notappl;                     { CS }  
      MMTH18N = notappl;                     { CS }  
      MMTH18O = notappl;                     { CS }  
      MMTH18P = notappl;                     { CS }  
      MMTH18X = Alfa2num(1, AMMTH3, "X");    { other }
    endif;	  
    MMTH19  = YesNo(AMMTH4A);                 { Ever been told by a doctor/health care worker you have: depression }
    MMTH20  = YesNo(AMMTH4B);                 { Ever been told by a doctor/health care worker you have: anxiety }
    MMTH21  = YesNo(AMMTH5);                  { Last 2 weeks took medication prescribed by doctor/health worker for depression/anxiety }
    MMTH22  = AMMTH6;                         { PHQ score }                      
    if (AMMTH6 >= 10 | AMMTHPHQ9 in 1:3) then { Referral based on PHQ score } 
       MMTH23  = 1; //Referral card provided 
    else 
       MMTH23  = 2; //No referral, other 
    endif;
	{ GAD score }
    MMTH24 = Score(MMTH1) + Score(MMTH2) + Score(MMTH3) + Score(MMTH4) + 
             Score(MMTH5) + Score(MMTH6) + Score(MMTH7);
	
  endif;  



