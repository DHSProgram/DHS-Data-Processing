{Application 'SCANIDS' logic file generated by CSPro }
PROC GLOBAL

  set explicit;

  numeric err, checkdig, i, x, w, base, xlab;

  { Sample ID follows form letter, digit, letter, digit, letter }
  function barcheck( alpha(5) bcode )
    err = 0;
    checkdig = 0;
    do i = 1 until i > 5 by 2
      x = pos( bcode[i:1], "ABCDEFGHIJKLMNOPQRSTUVWXYZ" );
      if !x then
        err = 1;
      elseif i < 5 then
        checkdig = checkdig + x-1;
      endif;
      if i < 5 then
        x = pos( bcode[i+1:1], "0123456789" );
        if !x then
          err = 1;
        else
          checkdig = checkdig + x-1;
        endif;
      endif;
    enddo;
    { Now check the check digit }
    base = 26;
    while checkdig >= base do
      checkdig = int(checkdig/base)+checkdig%base;
    enddo;
    if bcode[5:1] <> "ABCDEFGHIJKLMNOPQRSTUVWXYZ"[checkdig+1:1] then
      err = 1
    endif;
    barcheck = err;
  end;

  function endmess();
    numeric z;
    { Returns true if response is REVIEW }
    {+US}
    z = accept( "Laboratory code written on sample ?", "No", "Yes" );
    {US+}
    {{SP}
    z = accept( "Se escribio el numero de laboratorio en la muestra?", "No", "Si" );
    {SP}}
    {{FR}
    z = accept( "Code labo enregistré sur l'échantillon ?", "Non", "Oui" );
    {FR}}
    endmess = z;
  end;

PROC CNULL_FF
preproc
  open( COMMON_DICT );
  open( TESTLOG_DICT );
  SETTINGS_ID = sysparm()[6:4] ;
  xlab = tonumber(sysparm()[1:5])-1;
  { **** if using the program to scan outside of the HIV_MENU application activate the following lines
    SETTINGS_ID = "XX50";
    if loadcase( COMMON_DICT, SETTINGS_ID ) then
      xlab = SLASTID;
    endif;
  ***** }
  enter TESTLOG_FF;

PROC ID
preproc
  $ = 0;
  noinput;

postproc
  {+US}
  while accept( "Do you want to scan more samples?", "Yes", "No" ) = 1  do
  {US+}
  {{SP}
  while accept( "Desea escanear mas muestras?", "Si", "No" ) = 1  do
  {SP}}
  {{FR}
  while accept( "Voulez-vous scanner d'autres échantillons ?", "Oui", "Non" ) = 1  do
  {FR}}
    clear( TESTLOG_DICT );  { set all variables to not applicable before scanning another sample }
    enter TESTLOG_FF
  enddo;
  close( COMMON_DICT );
  close( TESTLOG_DICT );
  stop(-1);

PROC LBAR
  { check for ducplicate samples }
  if loadcase( TESTLOG_DICT, $ ) then
    {+US}
    errmsg( "Blood sample %s/Lab-Id %d is already in the database", LBAR, LABID );
    {US+}
    {{SP}
    errmsg( "Muestra %s/Lab-Id %d ya existe en la base de datos", LBAR, LABID );
    {SP}}
    {{FR}
    errmsg( "Echantillon %s/Code labo %d est déjà dans la base de données", LBAR, LABID );
    {FR}}
    clear( TESTLOG_DICT );  { set all variables to not applicable before scanning another sample }
    reenter
  { check bar code character composition }
  elseif barcheck($) then
    {+US}
    errmsg( "120: Bar code %s not in correct format or wrongly entered, please reenter", $ );
    {US+}
    {{SP}
    errmsg( "120: Codigo de barra %s tiene formato incorrecto o se entro equivocadamente, por favor re-ingresar", $ );
    {SP}}
    {{FR}
    errmsg( "120: Code barres %s en format incorrect ou mal saisi, veuillez re-essayer", $ );
    {FR}}
    reenter;
  else
    set attributes(LDATE) display;
  endif;

PROC LABID
preproc
  if !visualvalue($) then
    xlab = xlab + 1;
    $ = xlab;
    noinput;
  endif;

postproc
  if $ <> xlab then
    {+US}
    errmsg( "Warning: Lab ID entered (%d) differs from that expected (%d), please check before continuing",
             $, xlab );
    {US+}
    {{SP}
    errmsg( "Alerta: Numero de laboratorio (%d) difiere del esperado (%d), revise antes de continuar",
             $, xlab );
    {SP}}
    {{FR}
    errmsg( "Avertissement : Code labo entré (%d) diffère de celui attendu (%d), veuillez vérifier avant de continuer",
             $, xlab );
{FR}}

  endif;

PROC LDATE
preproc
  $ = sysdate("DDMMYYYY");

postproc
  $ = sysdate("DDMMYYYY");
  { set test status values for initial stage, testing not yet begun }
  LSTAGE   = 1;
  LSTATUS  = 0;
  LSTAGET  = getlabel( LSTAGE, LSTAGE );
  LSTATUST = getlabel( LSTATUS, LSTATUS );
  LFIXLAST = "Z";                          { establishes fix record length since the beginning }
  w = endmess();
  if w = 1 then
    reenter LDATE;
  elseif w = 2 then
    { Save the current sample to the main data base (testlog.dat) }
    writecase( TESTLOG_DICT, LBAR );
    { Save last entered LABID to external file }
    SLASTID = LABID;
    writecase( COMMON_DICT, SETTINGS_ID ); { update value of lastid in common file }
    errmsg( "The sample was saved to the database" );
    clear( TESTLOG_DICT );  { set all variables to not applicable before scanning another sample }
  else
    errmsg( "The sample was discarded, if necessary re-scan the sample again" );
    clear( TESTLOG_DICT );  { set all variables to not applicable before scanning another sample }
  endif;
