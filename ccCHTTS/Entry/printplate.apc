{Application 'PRINTPLATE' logic file generated by CSPro }
PROC GLOBAL

  set explicit;

  numeric j, pctgrey, greyarea;
  string dispname;

PROC CNULL_FF
preproc

  PLATE_ID = sysparm()[1:7];
  pctgrey  = tonumber( sysparm()[8:2] );

  dispname = "..\outlines\" + PLATE_ID + ".html";
  htm_init_styles(strip(dispname),"TablesStyle");

  errmsg( "Parma=%s Plate=%s pctgrey=%d%", strip(sysparm()), PLATE_ID, pctgrey );

  if loadcase( PLATE_DICT, PLATE_ID ) then
    { assign zero to OD when the sample was marked for retest }
    do varying j = 1 until j > totocc(RESID)
      if pos( "NULL", strip(BAR_A(j)) ) then MES_A(j) = 0; endif;
      if pos( "NULL", strip(BAR_B(j)) ) then MES_B(j) = 0; endif;
      if pos( "NULL", strip(BAR_C(j)) ) then MES_C(j) = 0; endif;
      if pos( "NULL", strip(BAR_D(j)) ) then MES_D(j) = 0; endif;
      if pos( "NULL", strip(BAR_E(j)) ) then MES_E(j) = 0; endif;
      if pos( "NULL", strip(BAR_F(j)) ) then MES_F(j) = 0; endif;
      if pos( "NULL", strip(BAR_G(j)) ) then MES_G(j) = 0; endif;
      if pos( "NULL", strip(BAR_H(j)) ) then MES_H(j) = 0; endif;
    enddo;
{ **** if the grey area concept is used this whole do loop needs to be coomented out }
    { set negative readings to negative for display purposes            }
    { negative values should not be changed as they will become poitive }
    { and results of negative values are considered negative            }
    do varying j = 1 until j > totocc(RESID)
      if !pos("+", RES_A(j)) & MES_A(j) > 0 then MES_A(j) = 0 - MES_A(j) endif;
      if !pos("+", RES_B(j)) & MES_B(j) > 0 then MES_B(j) = 0 - MES_B(j) endif;
      if !pos("+", RES_C(j)) & MES_C(j) > 0 then MES_C(j) = 0 - MES_C(j) endif;
      if !pos("+", RES_D(j)) & MES_D(j) > 0 then MES_D(j) = 0 - MES_D(j) endif;
      if !pos("+", RES_E(j)) & MES_E(j) > 0 then MES_E(j) = 0 - MES_E(j) endif;
      if !pos("+", RES_F(j)) & MES_F(j) > 0 then MES_F(j) = 0 - MES_F(j) endif;
      if !pos("+", RES_G(j)) & MES_G(j) > 0 then MES_G(j) = 0 - MES_G(j) endif;
      if !pos("+", RES_H(j)) & MES_H(j) > 0 then MES_H(j) = 0 - MES_H(j) endif;
    enddo;
{ *** this is where the comment for the grey area should be closed }
    do j = 1 until j > totocc(RESID)
      if pos(" ", RES_A(j))  then RES_A(j) = "-" endif;
      if pos(" ", RES_B(j))  then RES_B(j) = "-" endif;
      if pos(" ", RES_C(j))  then RES_C(j) = "-" endif;
      if pos(" ", RES_D(j))  then RES_D(j) = "-" endif;
      if pos(" ", RES_E(j))  then RES_E(j) = "-" endif;
      if pos(" ", RES_F(j))  then RES_F(j) = "-" endif;
      if pos(" ", RES_G(j))  then RES_G(j) = "-" endif;
      if pos(" ", RES_H(j))  then RES_H(j) = "-" endif;
    enddo;
    {+US}
    write( "COUNTRY DEMOGRAPHIC AND HEALTH SURVEY" );
    write( "HIV TEST - 2023                       " );
    write( "--------------------------------------" );
    write( " " );
    write( "Plate No. %s  Kit : _________            %s", PLATE_ID, getlabel(TESTTYPE, TESTTYPE) );
    write( " " );
    write( " Bar code identifiers" );
    {US+}
    {{SP}
    write( "PAIS: ENCUESTA DE DEMOGRAFIA Y SALUD" );
    write( "PRUEBA VIH - 2016" );
    write( "--------------------------------------" );
    write( " " );
    write( "Bandeja No. %s  Prueba : _________            %s", PLATE_ID, getlabel(TESTTYPE, TESTTYPE) );
    write( " " );
    write( "Codigos de Barra" );
    {SP}}
    {{FR}
    htm_hdr( "REPUBLIQUE DEMOCRATIQUE DU CONGO : ENQUETE DEMOGRAPHIQUE ET DE SANTE 2023-24", 1);
    htm_hdr( "TEST VIH                     ", 2 );
    htm_par("");
    htm_par( maketext( "Plaque No. %s  Kit : _________            %s", PLATE_ID, getlabel(TESTTYPE, TESTTYPE) ) );
    htm_par("");
    {FR}}
    htm_hdr( " Code barres",2 );
    htm_tabinit("");
    htm_tabhdr("|1|2|3|4|5|6|7|8|9|10|11|12|");
    htm_tabrow( maketext( "A|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|", BAR_A(1), BAR_A(2), BAR_A(3), BAR_A(4), BAR_A(5), BAR_A(6), BAR_A(7), BAR_A(8), BAR_A(9), BAR_A(10), BAR_A(11), BAR_A(12) ) );
    htm_tabrow( maketext( "B|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|", BAR_B(1), BAR_B(2), BAR_B(3), BAR_B(4), BAR_B(5), BAR_B(6), BAR_B(7), BAR_B(8), BAR_B(9), BAR_B(10), BAR_B(11), BAR_B(12) ) );
    htm_tabrow( maketext( "C|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|", BAR_C(1), BAR_C(2), BAR_C(3), BAR_C(4), BAR_C(5), BAR_C(6), BAR_C(7), BAR_C(8), BAR_C(9), BAR_C(10), BAR_C(11), BAR_C(12) ) );
    htm_tabrow( maketext( "D|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|", BAR_D(1), BAR_D(2), BAR_D(3), BAR_D(4), BAR_D(5), BAR_D(6), BAR_D(7), BAR_D(8), BAR_D(9), BAR_D(10), BAR_D(11), BAR_D(12) ) );
    htm_tabrow( maketext( "E|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|", BAR_E(1), BAR_E(2), BAR_E(3), BAR_E(4), BAR_E(5), BAR_E(6), BAR_E(7), BAR_E(8), BAR_E(9), BAR_E(10), BAR_E(11), BAR_E(12) ) );
    htm_tabrow( maketext( "F|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|", BAR_F(1), BAR_F(2), BAR_F(3), BAR_F(4), BAR_F(5), BAR_F(6), BAR_F(7), BAR_F(8), BAR_F(9), BAR_F(10), BAR_F(11), BAR_F(12) ) );
    htm_tabrow( maketext( "G|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|", BAR_G(1), BAR_G(2), BAR_G(3), BAR_G(4), BAR_G(5), BAR_G(6), BAR_G(7), BAR_G(8), BAR_G(9), BAR_G(10), BAR_G(11), BAR_G(12) ) );
    htm_tabrow( maketext( "H|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|", BAR_H(1), BAR_H(2), BAR_H(3), BAR_H(4), BAR_H(5), BAR_H(6), BAR_H(7), BAR_H(8), BAR_H(9), BAR_H(10), BAR_H(11), BAR_H(12) ) );
    htm_tabclose();
    htm_par(" ");

    htm_hdr( "Codes d'identification du laboratoire", 2);
    htm_tabinit("");
    htm_tabhdr("|1|2|3|4|5|6|7|8|9|10|11|12|");
    htm_tabrow( maketext( "A|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|", ID_A(1), ID_A(2), ID_A(3), ID_A(4), ID_A(5), ID_A(6), ID_A(7), ID_A(8), ID_A(9), ID_A(10), ID_A(11), ID_A(12) )); 
    htm_tabrow( maketext( "B|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|", ID_B(1), ID_B(2), ID_B(3), ID_B(4), ID_B(5), ID_B(6), ID_B(7), ID_B(8), ID_B(9), ID_B(10), ID_B(11), ID_B(12) )); 
    htm_tabrow( maketext( "C|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|", ID_C(1), ID_C(2), ID_C(3), ID_C(4), ID_C(5), ID_C(6), ID_C(7), ID_C(8), ID_C(9), ID_C(10), ID_C(11), ID_C(12) )); 
    htm_tabrow( maketext( "D|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|", ID_D(1), ID_D(2), ID_D(3), ID_D(4), ID_D(5), ID_D(6), ID_D(7), ID_D(8), ID_D(9), ID_D(10), ID_D(11), ID_D(12) )); 
    htm_tabrow( maketext( "E|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|", ID_E(1), ID_E(2), ID_E(3), ID_E(4), ID_E(5), ID_E(6), ID_E(7), ID_E(8), ID_E(9), ID_E(10), ID_E(11), ID_E(12) )); 
    htm_tabrow( maketext( "F|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|", ID_F(1), ID_F(2), ID_F(3), ID_F(4), ID_F(5), ID_F(6), ID_F(7), ID_F(8), ID_F(9), ID_F(10), ID_F(11), ID_F(12) )); 
    htm_tabrow( maketext( "G|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|", ID_G(1), ID_G(2), ID_G(3), ID_G(4), ID_G(5), ID_G(6), ID_G(7), ID_G(8), ID_G(9), ID_G(10), ID_G(11), ID_G(12) )); 
    htm_tabrow( maketext( "H|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|%7s|", ID_H(1), ID_H(2), ID_H(3), ID_H(4), ID_H(5), ID_H(6), ID_H(7), ID_H(8), ID_H(9), ID_H(10), ID_H(11), ID_H(12) )); 
    htm_tabclose();
    htm_par(" ");

{ *** uncomment this piece of code if grey area is used
    if !special(TDATE) then  { don't write out results unless test completed }
      write( " OD readings / Test results");
      write( "        1     2      3      4      5      6      7      8      9     10     11     12        " );
      write( "A %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f",
                RES_A(1),MES_A(1), RES_A(2),MES_A(2), RES_A(3),MES_A(3), RES_A(4),MES_A(4), RES_A(5),MES_A(5), RES_A(6),MES_A(6), RES_A(7),MES_A(7), RES_A(8),MES_A(8), RES_A(9),MES_A(9), RES_A(10),MES_A(10), RES_A(11),MES_A(11), RES_A(12),MES_A(12) );
      write( "B %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f",
                RES_B(1),MES_B(1), RES_B(2),MES_B(2), RES_B(3),MES_B(3), RES_B(4),MES_B(4), RES_B(5),MES_B(5), RES_B(6),MES_B(6), RES_B(7),MES_B(7), RES_B(8),MES_B(8), RES_B(9),MES_B(9), RES_B(10),MES_B(10), RES_B(11),MES_B(11), RES_B(12),MES_B(12) );
      write( "C %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f",
                RES_C(1),MES_C(1), RES_C(2),MES_C(2), RES_C(3),MES_C(3), RES_C(4),MES_C(4), RES_C(5),MES_C(5), RES_C(6),MES_C(6), RES_C(7),MES_C(7), RES_C(8),MES_C(8), RES_C(9),MES_C(9), RES_C(10),MES_C(10), RES_C(11),MES_C(11), RES_C(12),MES_C(12) );
      write( "D %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f",
                RES_D(1),MES_D(1), RES_D(2),MES_D(2), RES_D(3),MES_D(3), RES_D(4),MES_D(4), RES_D(5),MES_D(5), RES_D(6),MES_D(6), RES_D(7),MES_D(7), RES_D(8),MES_D(8), RES_D(9),MES_D(9), RES_D(10),MES_D(10), RES_D(11),MES_D(11), RES_D(12),MES_D(12) );
      write( "E %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f",
                RES_E(1),MES_E(1), RES_E(2),MES_E(2), RES_E(3),MES_E(3), RES_E(4),MES_E(4), RES_E(5),MES_E(5), RES_E(6),MES_E(6), RES_E(7),MES_E(7), RES_E(8),MES_E(8), RES_E(9),MES_E(9), RES_E(10),MES_E(10), RES_E(11),MES_E(11), RES_E(12),MES_E(12) );
      write( "F %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f",
                RES_F(1),MES_F(1), RES_F(2),MES_F(2), RES_F(3),MES_F(3), RES_F(4),MES_F(4), RES_F(5),MES_F(5), RES_F(6),MES_F(6), RES_F(7),MES_F(7), RES_F(8),MES_F(8), RES_F(9),MES_F(9), RES_F(10),MES_F(10), RES_F(11),MES_F(11), RES_F(12),MES_F(12) );
      write( "G %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f",
                RES_G(1),MES_G(1), RES_G(2),MES_G(2), RES_G(3),MES_G(3), RES_G(4),MES_G(4), RES_G(5),MES_G(5), RES_G(6),MES_G(6), RES_G(7),MES_G(7), RES_G(8),MES_G(8), RES_G(9),MES_G(9), RES_G(10),MES_G(10), RES_G(11),MES_G(11), RES_G(12),MES_G(12) );
      write( "H %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f %s%5.3f",
                RES_H(1),MES_H(1), RES_H(2),MES_H(2), RES_H(3),MES_H(3), RES_H(4),MES_H(4), RES_H(5),MES_H(5), RES_H(6),MES_H(6), RES_H(7),MES_H(7), RES_H(8),MES_H(8), RES_H(9),MES_H(9), RES_H(10),MES_H(10), RES_H(11),MES_H(11), RES_H(12),MES_H(12) );
      write( " " );
    endif;
  *** this is where the comment for the grey area will be closed }


{ *** comment this set of write commands if grey area is used.  It is replaced by the above write commands  }
    if !special(TDATE) then  { don't write out results unless test completed }
      htm_hdr( "Lectures DO / Résultats des tests", 2);
      htm_tabinit("");
      htm_tabhdr("|1|2|3|4|5|6|7|8|9|10|11|12|");
      htm_tabrow( maketext( "A|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|", MES_A(1), MES_A(2), MES_A(3), MES_A(4), MES_A(5), MES_A(6), MES_A(7), MES_A(8), MES_A(9), MES_A(10), MES_A(11), MES_A(12) ) );
      htm_tabrow( maketext( "B|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|", MES_B(1), MES_B(2), MES_B(3), MES_B(4), MES_B(5), MES_B(6), MES_B(7), MES_B(8), MES_B(9), MES_B(10), MES_B(11), MES_B(12) ) );
      htm_tabrow( maketext( "C|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|", MES_C(1), MES_C(2), MES_C(3), MES_C(4), MES_C(5), MES_C(6), MES_C(7), MES_C(8), MES_C(9), MES_C(10), MES_C(11), MES_C(12) ) );
      htm_tabrow( maketext( "D|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|", MES_D(1), MES_D(2), MES_D(3), MES_D(4), MES_D(5), MES_D(6), MES_D(7), MES_D(8), MES_D(9), MES_D(10), MES_D(11), MES_D(12) ) );
      htm_tabrow( maketext( "E|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|", MES_E(1), MES_E(2), MES_E(3), MES_E(4), MES_E(5), MES_E(6), MES_E(7), MES_E(8), MES_E(9), MES_E(10), MES_E(11), MES_E(12) ) );
      htm_tabrow( maketext( "F|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|", MES_F(1), MES_F(2), MES_F(3), MES_F(4), MES_F(5), MES_F(6), MES_F(7), MES_F(8), MES_F(9), MES_F(10), MES_F(11), MES_F(12) ) );
      htm_tabrow( maketext( "G|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|", MES_G(1), MES_G(2), MES_G(3), MES_G(4), MES_G(5), MES_G(6), MES_G(7), MES_G(8), MES_G(9), MES_G(10), MES_G(11), MES_G(12) ) );
      htm_tabrow( maketext( "H|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|%+7.3f|", MES_H(1), MES_H(2), MES_H(3), MES_H(4), MES_H(5), MES_H(6), MES_H(7), MES_H(8), MES_H(9), MES_H(10), MES_H(11), MES_H(12) ) );
      htm_tabclose();
      htm_par(" ");
      htm_hdr(maketext( "Date du test : %d     Heure du test     : %02d:%02d", TDATE, TTIMEH, TTIMEM ),3 );
      htm_hdr(maketext( "Valeur seuil = %1.3f nm    % cas positifs : %d ", TCUTOFF, TPOS ),3 );
      htm_par( " " );
      if TFLAG = 1 then
        htm_par( "TEST NON VALIDE ! VALEURS DES CONTROLES HORS LIMITES" )
      elseif TWARN = 3 then
        htm_par(maketext ( "AVERTISSEMENT : groupement de résultats positifs autour des cupules %s", TCLUST ) );
      elseif TWARN = 2 then
        htm_par( maketext( "AVERTISSEMENT : % de résultats positifs (%d) exceptionnellement élevé", TPOS ) );
      endif;
      htm_par( " " );
      htm_par( "Indiquez : Test Valide [      ]                    Test non Valide [      ]" );
      htm_par( " " );
      htm_par( "Nom___________________________________________      Signature_______________________________________" );
      htm_par( " " );
      htm_par( "Nom du Superviseur_____________________________      Signature_______________________________________" );
    {FR}}
    endif;
{ *** }
    greyarea = TCUTOFF - TCUTOFF * pctgrey / 100;          { begining of the lower range of grey area up to the cut off }
    {+US}
    write( "Date of test : %d     Time of test     : %02d:%02d", TDATE, TTIMEH, TTIMEM );
    write( "Cutoff value = %1.3f nm    % cases positive : %d ", TCUTOFF, TPOS );
{ *** uncomment if grey area is used
    write( "Grey area percentage = %d% Range of grey area values %5.3f-%5.3f ", pctgrey, greyarea, TCUTOFF );
*** }
    htm_par( " " );
    if TFLAG = 1 then
      htm_par( "INVALID ASSAY ! CONTROL VALUES OUT OF RANGE" )
    elseif TWARN = 3 then
      htm_par( maketext( "WARNING : clustering of positive results around wells %s", TCLUST ) );
    elseif TWARN = 2 then
      htm_par( maketext( "WARNING : % of positive results (%d) unusually high", TPOS ) );
    endif;
    htm_par( " " );
    htm_par( "Indicate: Valid Assay [   ]                    Invalid Assay [   ]" );
    htm_par( " " );
    htm_par( "Name___________________________________________      Signature_______________________________________" );
    htm_par( " " );
    htm_par( "Name of Supervisor_____________________________      Signature_______________________________________" );
    {US+}
    {{SP}
    write( "Fecha de Prueba : %d     Hora de Prueba    : %02d:%02d", TDATE, TTIMEH, TTIMEM );
    write( "Punto de corte = %1.3f nm    % casos positivos : %d ", TCUTOFF, TPOS );
{ *** uncomment if grey area is used
    write( "Porcentaje de area gris = %d% valores incluidos en area gris %5.3f-%5.3f ", pctgrey, greyarea, TCUTOFF );
*** }
    write( " " );
    if TFLAG = 1 then
      write( "ENSAYO INVALIDO O VALORES DE CONTROL FUERA DE RANGO" )
    elseif TWARN = 3 then
      write( "ALERTA : agrupamiento de resultados positivos alrededor del pozuelo %s", TCLUST );
    elseif TWARN = 2 then
      write( "ALERTA : % de resultados positivos (%d) muy alto", TPOS );
    endif;
    write( " " );
    write( "Indicar: Ensayo Valido [   ]  Ensayo Invalido [   ]    Lote [      ]  Fecha Exp. [          ]" );
    write( " " );
    write( "Nombre___________________________________________      Firma_______________________________________" );
    write( " " );
    write( "Nombre de Supervisor_____________________________      Firma_______________________________________" );
    {SP}}
    {{FR}
{ *** uncomment if grey area is used
    write( "Grey area percentage = %d% Range of grey area values %5.3f-%5.3f ", pctgrey, greyarea, TCUTOFF );
*** }
    htm_close();
    htm_disp(dispname);
  endif;

  stop;
