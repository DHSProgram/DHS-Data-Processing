{Application 'BROWSE_DBS' logic file generated by CSPro }
PROC GLOBAL

  set explicit;

  alpha(128) text;

  numeric lock, found, choice, temp, i, n;

  { used without additional logic to allow user to quit without having a dialog message come up }
  function onstop()
  end;

  { Ye/No prompt function }
  function ynprompt( alpha(128) promptstr )
    {+US}
    choice = accept( promptstr, "Yes", "No " );
    {US+}
    {{SP}
    choice = accept( promptstr, "Si", "No " );
    {SP}}
    {{FR}
    choice = accept( promptstr, "Oui", "Non " );
    {FR}}
    ynprompt = ( choice = 1 );
  end;

  { blank out sample entry in plate }
  function clear_well();
    do i = 1 while i <= 12
      if BAR_A(i) = LBAR then ID_A(i)  = "0"; BAR_A(i) = " NULL"; break; endif;
      if BAR_B(i) = LBAR then ID_B(i)  = "0"; BAR_B(i) = " NULL"; break; endif;
      if BAR_C(i) = LBAR then ID_C(i)  = "0"; BAR_C(i) = " NULL"; break; endif;
      if BAR_D(i) = LBAR then ID_D(i)  = "0"; BAR_D(i) = " NULL"; break; endif;
      if BAR_E(i) = LBAR then ID_E(i)  = "0"; BAR_E(i) = " NULL"; break; endif;
      if BAR_F(i) = LBAR then ID_F(i)  = "0"; BAR_F(i) = " NULL"; break; endif;
      if BAR_G(i) = LBAR then ID_G(i)  = "0"; BAR_G(i) = " NULL"; break; endif;
      if BAR_H(i) = LBAR then ID_H(i)  = "0"; BAR_H(i) = " NULL"; break; endif;
    enddo;
    writecase( PLATE_DICT );
  end;

PROC CNULL_FF
preproc
  lock = tonumber( sysparm()[1:1] );

PROC IDS0_FORM
  reenter id;

PROC ID
  found = selcase( TESTLOG_DICT, "" )
          include( LABID, LDATE, LSTATUS, LSTAGET, LDETERM2, LLOCK, LFINRES )
          where( LABID = $ );
  if found then
    if lock then
      {+US}
      choice = accept( "Select option",
                       "View sample information",
                       "Mark sample as usable/unusable",
                       "Mark as not enough DBS to complete the test",
                       "Reset sample when improperly prepared",
                       "Return to main menu" );
      {US+}
      {{SP}
      choice = accept( "Seleccione una opcion",
                       "Ver informacion de la muestra",
                       "Marcar la muestra como servible/no-servible",
                       "Marcar como no hubo suficiente DBS para completar el test",
                       "Reset sample when improperly prepared",
                       "Regresar al menu principal" );
      {SP}}
      {{FR}
      choice = accept( "Choisissez une option",
                       "Afficher les informations de l'échantillon",
                       "Marquer l'échantillon comme utilisable/inutilisable",
                       "Marquer comme pas assez de DBS pour accomplir le test",
                       "Reset sample when improperly prepared",
                       "Retour au menu principal" );
      {FR}}
      if choice = 5 then              { return to previous menu }
        stop(-1)
      elseif choice = 2 then              { mark sample as usable/unsuable }
        if LSTATUS | LSTAGE > 1 then
          {+US}
          errmsg( "DBS sample has been assigned to a tray or tested, it cannot be marked unusable !" );
          {US+}
          {{SP}
          errmsg( "Muestra fue asignada a una bandeja o ya fue probada, no se puede marcar como no-servible !" );
          {SP}}
          {{FR}
          errmsg( "L'échantillon DBS a été assigné à une plaque ou est déjà testé, il ne peut être marqué comme inutilisable !" );
          {FR}}
          stop(-1);
        else
          if LLOCK <> 1 then
            {+US}
            text = concat( "DBS Sample ", edit("99999", LABID),
                           " Do you wish to mark it UNUSABLE (prevent from further processing ?" );
            {US+}
            {{SP}
            text = concat( "Muestra ", edit("99999", LABID),
                           " Desea marcarla como NO-SERVIBLE (no se podra seguir procesando ?" );
            {SP}}
            {{FR}
            text = concat( "Echantillon DBS ", edit("99999", LABID),
                           " Voulez-voous le marquer comme INUTILISABLE (Empêche tout traitement ultérieur ?" );
            {FR}}

            if ynprompt( text ) then
              LLOCK = 1;
              if writecase( TESTLOG_DICT, LBAR ) then
                {+US}
                errmsg( "Sample %d Marked Unusable", LABID );
                {US+}
                {{SP}
                errmsg( "Muestra %d se marco como no-servible", LABID );
                {SP}}
                {{FR}
                errmsg( "Echantillon %d marqué inutilisable", LABID );
                {FR}}

              endif;
              stop(-1);
            endif;
          else
            {+US}
            text = concat( "DBS Sample ", edit("99999", LABID),
                           " is marked UNUSABLE, do you wish to mark it USABLE? (allow further processing)" );
            {US+}
            {{SP}
            text = concat( "Muestra  ", edit("99999", LABID),
                           " esta marcada como no-servible, desea marcarla como servivble? (permite seguir procesandola)" );
            {SP}}
            {{FR}
            text = concat( "Echantillon DBS ", edit("99999", LABID),
                           " est marqué INUTILISABLE, Voulez-vous le marquer UTILISABLE? (permet traitement ultérieur)" );
            {FR}}

            if ynprompt( text ) then
              LLOCK = 0;
              if writecase( TESTLOG_DICT, LBAR ) then
                {+US}
                errmsg( "Sample %d Marked Usable", LABID );
                {US+}
                {{SP}
                errmsg( "Muestra %d se marco como servible", LABID );
                {SP}}
                {{FR}
                errmsg( "Echantillon %d marqué utilisable", LABID );
                {FR}}
              endif;
              stop(-1);
            endif; { ynprompt }
          endif; { locked }
        endif; { ok to lock/unlock }
      elseif choice = 3 then          { mark the sample as protocol could not be completed }
        if LSTAGE = 9 then
          {+US}
          errmsg( "Test for DBS sample already completed, make sure that in fact you want to change it" );
          {US+}
          {{SP}
          errmsg( "Test para la muestra ya se completo, asegurese que en realidad desea modificarla" );
          {SP}}
          {{FR}
          errmsg( "Le test de l'échantillon est déjà accompli, assurez-vous qu'en fait vous voulez le changer" );
          {FR}}
        endif;
        {+US}
        text = concat( "DBS Sample ", edit("99999", LABID),
                       ": Do you wish to mark it as if the test can't be completed for lack of blood?" );
        {US+}
        {{SP}
        text = concat( "Muestra ", edit("99999", LABID),
                       ": Desea marcarla como si el test no se puede completar por falta de sangre?" );
        {SP}}
        {{FR}
        text = concat( "Echantillon DBS ", edit("99999", LABID),
                       ": Voulez-vous le marquer comme si le test ne peut pas être accompli par manque de sang ?" );
        {FR}}

        if ynprompt( text ) then
          LSTAGE  = 9;      { testing completed }
          LSTAGET = GetLabel( LSTAGE, LSTAGE );    { testing completed in text }
          LSTATUS = 1;      { stage completed }
          LFINRES = 8;      { not enough sample to complete the test }
          if writecase( TESTLOG_DICT, LBAR ) then
            {+US}
            errmsg( "Sample %d Marked completed and as not with enough DBS", LABID );
            {US+}
            {{SP}
            errmsg( "Muestra %d marcada como completa y sin suficiente DBS", LABID );
            {SP}}
            {{FR}
            errmsg( "Echantillon %d marqué complété et comme n'ayant pas assez de DBS", LABID );
            {FR}}
          endif;
          stop(-1);
        endif;
      elseif choice = 4 then          { reset the sample because the well was not properly prepared }
        n = totocc( LTEST000 );
        if n = 0 | LSTAGE = 9 | LTRES(n) <>  notappl | !length( strip(LPLATE(n)) ) then
          {+US}
          errmsg( "DBS not assigned yet for any test/protocol completed/tray with sample already validated, option not allowed" );
          {US+}
          {{SP}
          errmsg( "La muestra no se ha asignado/protocolo finalizo/bandeja con la muestra ya fue validada, opcion no permitida" );
          {SP}}
          {{FR}
          errmsg( "DBS not assigned yet for any test/protocol completed/tray with sample already validated, option not allowed" );
          {FR}}
          stop(-1);
        endif;
        {+US}
        text = concat( "DBS ", edit("99999", LABID), ": Do you want to reset and retest it again?" );
        {US+}
        {{SP}
        text = concat( "Muestra ", edit("99999", LABID), ": Desea cancelarla para volver a hacer el test de nuevo?" );
        {SP}}
        {{FR}
        text = concat( "DBS ", edit("99999", LABID), ": Voulez-vous to reset and retest it encore un fois?" );
        {FR}}

        if ynprompt( text ) then
          if loadcase( PLATE_DICT, LPLATE(n) ) then
            clear_well();
          endif;

          { blank out all values for current stage }
          LSTATUS    = 0;            { make the sample available again }
          LTYPE(n)   = notappl;      { test type }
          LTYPET(n)  = " ";          { test type textual }
          LCDATED(n) = notappl;      { day tray was generated }
          LCDATEM(n) = notappl;      { month tray was generated }
          LCDATEY(n) = notappl;      { year tray was generated }
          LPLATE(n)  = " ";          { plate sample was assigned }
          LCOL(n)    = notappl;      { sample column in plate }
          LROW(n)    = notappl;      { sample reow in plate }
          if writecase( TESTLOG_DICT, LBAR ) then
            {+US}
            errmsg( "Sample %d reset. It will available for further testing", LABID );
            {US+}
            {{SP}
            errmsg( "Muestra %d reversada a su estado aneterior.  Volvera a estar disponible para otra prueba", LABID );
            {SP}}
            {{FR}
            errmsg( "Echantillon %d reset. It will available for further testing", LABID );
            {FR}}
          endif;
          stop(-1);
        endif;
      else
        enter TESTLOG_FF;
      endif;             { end of test on choice 2,3 }
    else
      enter TESTLOG_FF;
    endif; { lock parameter }

  else
    {+US}
    errmsg( "DBS sample with lab id %d does not exist or has not been scanned into the database, please check!", $ );
    {US+}
    {{SP}
    errmsg( "Muestra %d no existe o no se ha escaneado a la base de datos, por favor revisar", $ );
    {SP}}
    {{FR}
    errmsg( "Echantillon DBS avec code labo %d n'existe pas ou n'est pas encore scanné dans la base de données, veuillez vérifier!", $ );
    {FR}}

    reenter;
  endif;

PROC LTYPET
  reenter;

PROC LFINRES
preproc
  temp = visualvalue($);

postproc
  $ = temp;
