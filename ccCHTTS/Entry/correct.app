{Application 'CORRECT' logic file generated by CSPro }
{ Used to manually modify positions of DBS lab id's in plate data  }
{ This is to allow correction if the lab technician makes an error }
{ in positioning the sample in the tray                            }
PROC GLOBAL

  set explicit;

  alpha (5) temp;
  numeric maxcols, err, idx;

  function update_db( alpha(5) wid, alpha(4) wrow, wcol )
    { checks 1.     if id is valid (exists in database)
             2.     if id was originally assigned to current plate
           if checks ok then updates samples database with well position and test results
    }
    err = 0;
    if selcase( TESTLOG_DICT, "" ) include (LABID) where (LABID = tonumber(wid)) then
      if !count( LTEST where LPLATE = PLATE_ID ) then
        {+US}
        err = errmsg( "120: Sample ID %s was not assigned to this plate", wid );
        {US+}
        {{SP}
        err = errmsg( "120: Muestra %s no fue asignada a esta bandeja", wid );
        {SP}}
        {{FR}
        err = errmsg( "120: Echantillon numéro %s n'était pas assigné à cette plaque", wid );
        {FR}}
      endif;
    else
      {+US}
      err = errmsg( "125: Sample ID %s does not exist in samples database", wid );
      {US+}
      {{SP}
      err = errmsg( "125: Muestra %s no existe en la base de datos", wid );
      {SP}}
      {{FR}
      err = errmsg( "125: Echantillon numéro %s n'existe pas dans la base de données des échantillons", wid );
      {FR}}
    endif;
    if !err then { update samples data with new row/col co-ordinates and test result }
      do varying idx = 1 until idx > totocc(LTEST)
        if LPLATE(idx) = PLATE_ID then { found entry for that plate }
           LROW(idx) = pos( wrow[4:1], "ABCDEFGH" );
           LCOL(idx) = wcol;
           writecase( TESTLOG_DICT, LBAR );
           break;
         endif;
       enddo;
       update_db = 1;
    endif;
  end;

PROC PLATE_FF

PROC PLATE_QUEST
preproc
  maxcols = 12;

  set attributes (MES_A, MES_B, MES_C, MES_D, MES_E, MES_F, MES_G, MES_H) protect;
  set attributes (RES_A, RES_B, RES_C, RES_D, RES_E, RES_F, RES_G, RES_H) protect;
  set attributes (BAR_A, BAR_B, BAR_C, BAR_D, BAR_E, BAR_F, BAR_G, BAR_H) protect;

postproc

  { check no duplicates }

  { unprotect fields to avoid error messages }
  set attributes (MES_A, MES_B, MES_C, MES_D, MES_E, MES_F, MES_G, MES_H) native;
  set attributes (RES_A, RES_B, RES_C, RES_D, RES_E, RES_F, RES_G, RES_H) native;
  set attributes (BAR_A, BAR_B, BAR_C, BAR_D, BAR_E, BAR_F, BAR_G, BAR_H) native;

PROC MES000
preproc
  if special(visualvalue(MES_A(1))) then
    skip to ID_A(1)
  endif;

PROC ID_A
preproc
  temp = $;
  if !(tonumber($) in 1:99999) then advance to ID_B ;endif;

postproc
  if temp <> $ then
    $ = edit("99999", tonumber($));
    if !update_db($, getsymbol(), curocc()) then
      reenter;
    else
      BAR_A(curocc()) = LBAR;
    endif;
  endif;

PROC ID_B
preproc
  temp = $;
  if !(tonumber($) in 1:99999) then advance to ID_C ;endif;

postproc
  if temp <> $ then
    $ = edit("99999", tonumber($));
    if !update_db($, getsymbol(), curocc()) then
      reenter;
    else
      BAR_B(curocc()) = LBAR;
    endif;
  endif;

PROC ID_C
preproc
  temp = $;
  if !(tonumber($) in 1:99999) then advance to ID_D ;endif;

postproc
  if temp <> $ then
    $ = edit("99999", tonumber($));
    if !update_db($, getsymbol(), curocc()) then
      reenter;
    else
      BAR_C(curocc()) = LBAR;
    endif;
  endif;

PROC ID_D
preproc
  temp = $;
  if !(tonumber($) in 1:99999) then advance to ID_E ;endif;

postproc
  if temp <> $ then
    $ = edit("99999", tonumber($));
    if !update_db($, getsymbol(), curocc()) then
      reenter;
    else
      BAR_D(curocc()) = LBAR;
    endif;
  endif;

PROC ID_E
preproc
  temp = $;
  if !(tonumber($) in 1:99999) then advance to ID_F ;endif;

postproc
  if temp <> $ then
    $ = edit("99999", tonumber($));
    if !update_db($, getsymbol(), curocc()) then
      reenter;
    else
      BAR_E(curocc()) = LBAR;
    endif;
  endif;

PROC ID_F
preproc
  temp = $;
  if !(tonumber($) in 1:99999) then advance to ID_G ;endif;

postproc
  if temp <> $ then
    $ = edit("99999", tonumber($));
    if !update_db($, getsymbol(), curocc()) then
      reenter;
    else
      BAR_F(curocc()) = LBAR;
    endif;
  endif;

PROC ID_G
preproc
  temp = $;
  if !(tonumber($) in 1:99999) then advance to ID_H ;endif;

postproc
  if temp <> $ then
    $ = edit("99999", tonumber($));
    if !update_db($, getsymbol(), curocc()) then
      reenter;
    else
      BAR_G(curocc()) = LBAR;
    endif;
  endif;

PROC ID_H
preproc
  temp = $;
  if !(tonumber($) in 1:99999) then advance to ID_A(curocc()+1) ;endif;

postproc
  if temp <> $ then
    $ = edit("99999", tonumber($));
    if !update_db($, getsymbol(), curocc()) then
      reenter;
    else
      BAR_H(curocc()) = LBAR;
    endif;
  endif;
