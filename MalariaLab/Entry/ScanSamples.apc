{Application 'SCANIDS' logic file generated by CSPro }
PROC GLOBAL

  numeric err, checkdig, i, x, base, xlab;

  { Sample ID follows form letter, digit, letter, digit, letter }
  function barcheck( alpha(5) bcode )
    err = 0;
    checkdig = 0;
    do i = 1 until i > 5 by 2
      x = pos( bcode[i:1], "ABCDEFGHIJKLMNOPQRSTUVWXYZ" );
      if !x then
        err = 1;
      elseif i < 5 then
        checkdig = checkdig + x-1;
      endif;
      if i < 5 then
        x = pos( bcode[i+1:1], "0123456789" );
        if !x then
          err = 1;
        else
          checkdig = checkdig + x-1;
        endif;
      endif;
    enddo;
    { Now check the check digit }
    base = 26;
    while checkdig >= base do
      checkdig = int(checkdig/base)+checkdig%base;
    enddo;
    if bcode[5:1] <> "ABCDEFGHIJKLMNOPQRSTUVWXYZ"[checkdig+1:1] then
      err = 1
    endif;
    barcheck = err;
  end;

  function endmess();
    { Returns true if response is REVIEW }
    endmess = ( accept(tr("Laboratory code pasted on sample?"), tr("No"), tr("Yes") ) = 1 );
  end;

PROC CNULL_FF
preproc
  SETTINGS_ID = sysparm()[6:4] ;
  xlab = tonumber(sysparm()[1:5])-1;

  { set language at start of the program, defaulting to language passed by menu }
  setlanguage( getlanguage() );

  { set font for value sets }
  setfont( ALL, "Arial", 22, bold );
  setproperty(TESTLOG_DICT, "ShowExtendedControlTitle", "No");  
  
  enter TESTLOG_FF;

PROC ID
preproc
  $ = 0;
  noinput;

postproc
  while accept(tr("Do you want to scan more samples?"), tr("Yes"), tr("No") ) = 1  do
    clear( TESTLOG_DICT );  { set all variables to not applicable before scanning another sample }
    enter TESTLOG_FF
  enddo;
  stop(1);

PROC LBAR
  { check for ducplicate samples }
  if loadcase( TESTLOG_DICT, $ ) then
    errmsg( 300, LBAR, LABID );
    clear( TESTLOG_DICT );  { set all variables to not applicable before scanning another sample }
    reenter
  { check bar code character composition }
  elseif barcheck($) then
    errmsg( 320, LBAR );
    reenter;
  else
    set attributes(LDATE) display;
  endif;

PROC LABID
preproc
  if !visualvalue($) then
    xlab = xlab + 1;
    $ = xlab;
    noinput;
  endif;

postproc
  if $ <> xlab then
    errmsg( 330, $, xlab );
  endif;

PROC LDATE
preproc
  $ = sysdate("DDMMYYYY");

postproc
  $ = sysdate("DDMMYYYY");
  { set test status value as sample being scanned }
  LSTATUS  = 1;
  LRESULT1 = missing;
  LRESULT2 = missing;
  LRESULT3 = missing;
  LEXT     = notappl; 
  LFIXLAST = "Z";                          { establishes fix record length since the beginning }
  if endmess() then
    reenter LDATE;
  endif;

  { Save the current sample to the main data base (testlog.dat) }
  writecase( TESTLOG_DICT );

  { Save last entered LABID to have an idex by lab ID }
  LABNUMBER = LABID;
  LBARCODE  = LBAR;
  writecase( LABINDEX );

  { Save last entered LABID to external file }
  SLASTID = LABID;
  writecase( COMMON_DICT ); { update value of lastid in common file }
